name: "CnnMixture" 

layers { 
 name: "data" 
 type: DATA 
 top:  "data" 
 top:  "label" 
 data_param { 
   source: "/home/ge9/WACV2016/dataset/train/cub_2011/lmdb/cub_2011_train_lmdb" 
   backend: LMDB 
   batch_size: 20 
 } 
 transform_param { 
    crop_size: 226 
    mean_file: "/home/ge9/WACV2016/dataset/models/ImageNet/imagenet_mean.binaryproto" 
    mirror: true 
  } 
  include: { phase: TRAIN } 
} 

layers { 
 name: "data" 
 type: DATA 
 top:  "data" 
 top:  "label" 
 data_param { 
   source: "/home/ge9/WACV2016/dataset/test/cub_2011/lmdb/cub_2011_test_lmdb" 
   backend: LMDB 
   batch_size: 20 
 } 
 transform_param { 
    crop_size: 226 
    mean_file: "/home/ge9/WACV2016/dataset/models/ImageNet/imagenet_mean.binaryproto" 
    mirror: false 
  } 
  include: { phase: TEST } 
} 

layers {

  bottom: "data"

  top: "conv1/7x7_s2-se1"

  name: "conv1/7x7_s2-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 3

    kernel_size: 7

    stride: 2

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv1/7x7_s2-se1"

  top: "conv1/7x7_s2-se1"

  name: "conv1/relu_7x7-se1"

  type: RELU

}

layers {

  bottom: "conv1/7x7_s2-se1"

  top: "pool1/3x3_s2-se1"

  name: "pool1/3x3_s2-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool1/3x3_s2-se1"

  top: "pool1/norm1-se1"

  name: "pool1/norm1-se1"

  type: LRN

  lrn_param {

    local_size: 5

    alpha: 0.0001

    beta: 0.75

  }

}

layers {

  bottom: "pool1/norm1-se1"

  top: "conv2/3x3_reduce-se1"

  name: "conv2/3x3_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv2/3x3_reduce-se1"

  top: "conv2/3x3_reduce-se1"

  name: "conv2/relu_3x3_reduce-se1"

  type: RELU

}

layers {

  bottom: "conv2/3x3_reduce-se1"

  top: "conv2/3x3-se1"

  name: "conv2/3x3-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv2/3x3-se1"

  top: "conv2/3x3-se1"

  name: "conv2/relu_3x3-se1"

  type: RELU

}

layers {

  bottom: "conv2/3x3-se1"

  top: "conv2/norm2-se1"

  name: "conv2/norm2-se1"

  type: LRN

  lrn_param {

    local_size: 5

    alpha: 0.0001

    beta: 0.75

  }

}

layers {

  bottom: "conv2/norm2-se1"

  top: "pool2/3x3_s2-se1"

  name: "pool2/3x3_s2-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool2/3x3_s2-se1"

  top: "inception_3a/1x1-se1"

  name: "inception_3a/1x1-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/1x1-se1"

  top: "inception_3a/1x1-se1"

  name: "inception_3a/relu_1x1-se1"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se1"

  top: "inception_3a/3x3_reduce-se1"

  name: "inception_3a/3x3_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/3x3_reduce-se1"

  top: "inception_3a/3x3_reduce-se1"

  name: "inception_3a/relu_3x3_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_3a/3x3_reduce-se1"

  top: "inception_3a/3x3-se1"

  name: "inception_3a/3x3-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/3x3-se1"

  top: "inception_3a/3x3-se1"

  name: "inception_3a/relu_3x3-se1"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se1"

  top: "inception_3a/5x5_reduce-se1"

  name: "inception_3a/5x5_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 16

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/5x5_reduce-se1"

  top: "inception_3a/5x5_reduce-se1"

  name: "inception_3a/relu_5x5_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_3a/5x5_reduce-se1"

  top: "inception_3a/5x5-se1"

  name: "inception_3a/5x5-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/5x5-se1"

  top: "inception_3a/5x5-se1"

  name: "inception_3a/relu_5x5-se1"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se1"

  top: "inception_3a/pool-se1"

  name: "inception_3a/pool-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_3a/pool-se1"

  top: "inception_3a/pool_proj-se1"

  name: "inception_3a/pool_proj-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/pool_proj-se1"

  top: "inception_3a/pool_proj-se1"

  name: "inception_3a/relu_pool_proj-se1"

  type: RELU

}

layers {

  bottom: "inception_3a/1x1-se1"

  bottom: "inception_3a/3x3-se1"

  bottom: "inception_3a/5x5-se1"

  bottom: "inception_3a/pool_proj-se1"

  top: "inception_3a/output-se1"

  name: "inception_3a/output-se1"

  type: CONCAT

}

layers {

  bottom: "inception_3a/output-se1"

  top: "inception_3b/1x1-se1"

  name: "inception_3b/1x1-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/1x1-se1"

  top: "inception_3b/1x1-se1"

  name: "inception_3b/relu_1x1-se1"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se1"

  top: "inception_3b/3x3_reduce-se1"

  name: "inception_3b/3x3_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/3x3_reduce-se1"

  top: "inception_3b/3x3_reduce-se1"

  name: "inception_3b/relu_3x3_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_3b/3x3_reduce-se1"

  top: "inception_3b/3x3-se1"

  name: "inception_3b/3x3-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/3x3-se1"

  top: "inception_3b/3x3-se1"

  name: "inception_3b/relu_3x3-se1"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se1"

  top: "inception_3b/5x5_reduce-se1"

  name: "inception_3b/5x5_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/5x5_reduce-se1"

  top: "inception_3b/5x5_reduce-se1"

  name: "inception_3b/relu_5x5_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_3b/5x5_reduce-se1"

  top: "inception_3b/5x5-se1"

  name: "inception_3b/5x5-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/5x5-se1"

  top: "inception_3b/5x5-se1"

  name: "inception_3b/relu_5x5-se1"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se1"

  top: "inception_3b/pool-se1"

  name: "inception_3b/pool-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_3b/pool-se1"

  top: "inception_3b/pool_proj-se1"

  name: "inception_3b/pool_proj-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/pool_proj-se1"

  top: "inception_3b/pool_proj-se1"

  name: "inception_3b/relu_pool_proj-se1"

  type: RELU

}

layers {

  bottom: "inception_3b/1x1-se1"

  bottom: "inception_3b/3x3-se1"

  bottom: "inception_3b/5x5-se1"

  bottom: "inception_3b/pool_proj-se1"

  top: "inception_3b/output-se1"

  name: "inception_3b/output-se1"

  type: CONCAT

}

layers {

  bottom: "inception_3b/output-se1"

  top: "pool3/3x3_s2-se1"

  name: "pool3/3x3_s2-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool3/3x3_s2-se1"

  top: "inception_4a/1x1-se1"

  name: "inception_4a/1x1-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/1x1-se1"

  top: "inception_4a/1x1-se1"

  name: "inception_4a/relu_1x1-se1"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se1"

  top: "inception_4a/3x3_reduce-se1"

  name: "inception_4a/3x3_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/3x3_reduce-se1"

  top: "inception_4a/3x3_reduce-se1"

  name: "inception_4a/relu_3x3_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_4a/3x3_reduce-se1"

  top: "inception_4a/3x3-se1"

  name: "inception_4a/3x3-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 208

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/3x3-se1"

  top: "inception_4a/3x3-se1"

  name: "inception_4a/relu_3x3-se1"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se1"

  top: "inception_4a/5x5_reduce-se1"

  name: "inception_4a/5x5_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 16

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/5x5_reduce-se1"

  top: "inception_4a/5x5_reduce-se1"

  name: "inception_4a/relu_5x5_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_4a/5x5_reduce-se1"

  top: "inception_4a/5x5-se1"

  name: "inception_4a/5x5-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 48

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/5x5-se1"

  top: "inception_4a/5x5-se1"

  name: "inception_4a/relu_5x5-se1"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se1"

  top: "inception_4a/pool-se1"

  name: "inception_4a/pool-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4a/pool-se1"

  top: "inception_4a/pool_proj-se1"

  name: "inception_4a/pool_proj-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/pool_proj-se1"

  top: "inception_4a/pool_proj-se1"

  name: "inception_4a/relu_pool_proj-se1"

  type: RELU

}

layers {

  bottom: "inception_4a/1x1-se1"

  bottom: "inception_4a/3x3-se1"

  bottom: "inception_4a/5x5-se1"

  bottom: "inception_4a/pool_proj-se1"

  top: "inception_4a/output-se1"

  name: "inception_4a/output-se1"

  type: CONCAT

}

layers {

  bottom: "inception_4a/output-se1"

  top: "inception_4b/1x1-se1"

  name: "inception_4b/1x1-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/1x1-se1"

  top: "inception_4b/1x1-se1"

  name: "inception_4b/relu_1x1-se1"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se1"

  top: "inception_4b/3x3_reduce-se1"

  name: "inception_4b/3x3_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 112

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/3x3_reduce-se1"

  top: "inception_4b/3x3_reduce-se1"

  name: "inception_4b/relu_3x3_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_4b/3x3_reduce-se1"

  top: "inception_4b/3x3-se1"

  name: "inception_4b/3x3-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 224

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/3x3-se1"

  top: "inception_4b/3x3-se1"

  name: "inception_4b/relu_3x3-se1"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se1"

  top: "inception_4b/5x5_reduce-se1"

  name: "inception_4b/5x5_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 24

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/5x5_reduce-se1"

  top: "inception_4b/5x5_reduce-se1"

  name: "inception_4b/relu_5x5_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_4b/5x5_reduce-se1"

  top: "inception_4b/5x5-se1"

  name: "inception_4b/5x5-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/5x5-se1"

  top: "inception_4b/5x5-se1"

  name: "inception_4b/relu_5x5-se1"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se1"

  top: "inception_4b/pool-se1"

  name: "inception_4b/pool-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4b/pool-se1"

  top: "inception_4b/pool_proj-se1"

  name: "inception_4b/pool_proj-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/pool_proj-se1"

  top: "inception_4b/pool_proj-se1"

  name: "inception_4b/relu_pool_proj-se1"

  type: RELU

}

layers {

  bottom: "inception_4b/1x1-se1"

  bottom: "inception_4b/3x3-se1"

  bottom: "inception_4b/5x5-se1"

  bottom: "inception_4b/pool_proj-se1"

  top: "inception_4b/output-se1"

  name: "inception_4b/output-se1"

  type: CONCAT

}

layers {

  bottom: "inception_4b/output-se1"

  top: "inception_4c/1x1-se1"

  name: "inception_4c/1x1-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/1x1-se1"

  top: "inception_4c/1x1-se1"

  name: "inception_4c/relu_1x1-se1"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se1"

  top: "inception_4c/3x3_reduce-se1"

  name: "inception_4c/3x3_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/3x3_reduce-se1"

  top: "inception_4c/3x3_reduce-se1"

  name: "inception_4c/relu_3x3_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_4c/3x3_reduce-se1"

  top: "inception_4c/3x3-se1"

  name: "inception_4c/3x3-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/3x3-se1"

  top: "inception_4c/3x3-se1"

  name: "inception_4c/relu_3x3-se1"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se1"

  top: "inception_4c/5x5_reduce-se1"

  name: "inception_4c/5x5_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 24

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/5x5_reduce-se1"

  top: "inception_4c/5x5_reduce-se1"

  name: "inception_4c/relu_5x5_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_4c/5x5_reduce-se1"

  top: "inception_4c/5x5-se1"

  name: "inception_4c/5x5-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/5x5-se1"

  top: "inception_4c/5x5-se1"

  name: "inception_4c/relu_5x5-se1"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se1"

  top: "inception_4c/pool-se1"

  name: "inception_4c/pool-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4c/pool-se1"

  top: "inception_4c/pool_proj-se1"

  name: "inception_4c/pool_proj-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/pool_proj-se1"

  top: "inception_4c/pool_proj-se1"

  name: "inception_4c/relu_pool_proj-se1"

  type: RELU

}

layers {

  bottom: "inception_4c/1x1-se1"

  bottom: "inception_4c/3x3-se1"

  bottom: "inception_4c/5x5-se1"

  bottom: "inception_4c/pool_proj-se1"

  top: "inception_4c/output-se1"

  name: "inception_4c/output-se1"

  type: CONCAT

}

layers {

  bottom: "inception_4c/output-se1"

  top: "inception_4d/1x1-se1"

  name: "inception_4d/1x1-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 112

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/1x1-se1"

  top: "inception_4d/1x1-se1"

  name: "inception_4d/relu_1x1-se1"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se1"

  top: "inception_4d/3x3_reduce-se1"

  name: "inception_4d/3x3_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 144

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/3x3_reduce-se1"

  top: "inception_4d/3x3_reduce-se1"

  name: "inception_4d/relu_3x3_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_4d/3x3_reduce-se1"

  top: "inception_4d/3x3-se1"

  name: "inception_4d/3x3-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 288

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/3x3-se1"

  top: "inception_4d/3x3-se1"

  name: "inception_4d/relu_3x3-se1"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se1"

  top: "inception_4d/5x5_reduce-se1"

  name: "inception_4d/5x5_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/5x5_reduce-se1"

  top: "inception_4d/5x5_reduce-se1"

  name: "inception_4d/relu_5x5_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_4d/5x5_reduce-se1"

  top: "inception_4d/5x5-se1"

  name: "inception_4d/5x5-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/5x5-se1"

  top: "inception_4d/5x5-se1"

  name: "inception_4d/relu_5x5-se1"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se1"

  top: "inception_4d/pool-se1"

  name: "inception_4d/pool-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4d/pool-se1"

  top: "inception_4d/pool_proj-se1"

  name: "inception_4d/pool_proj-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/pool_proj-se1"

  top: "inception_4d/pool_proj-se1"

  name: "inception_4d/relu_pool_proj-se1"

  type: RELU

}

layers {

  bottom: "inception_4d/1x1-se1"

  bottom: "inception_4d/3x3-se1"

  bottom: "inception_4d/5x5-se1"

  bottom: "inception_4d/pool_proj-se1"

  top: "inception_4d/output-se1"

  name: "inception_4d/output-se1"

  type: CONCAT

}

layers {

  bottom: "inception_4d/output-se1"

  top: "inception_4e/1x1-se1"

  name: "inception_4e/1x1-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/1x1-se1"

  top: "inception_4e/1x1-se1"

  name: "inception_4e/relu_1x1-se1"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se1"

  top: "inception_4e/3x3_reduce-se1"

  name: "inception_4e/3x3_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/3x3_reduce-se1"

  top: "inception_4e/3x3_reduce-se1"

  name: "inception_4e/relu_3x3_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_4e/3x3_reduce-se1"

  top: "inception_4e/3x3-se1"

  name: "inception_4e/3x3-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 320

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/3x3-se1"

  top: "inception_4e/3x3-se1"

  name: "inception_4e/relu_3x3-se1"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se1"

  top: "inception_4e/5x5_reduce-se1"

  name: "inception_4e/5x5_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/5x5_reduce-se1"

  top: "inception_4e/5x5_reduce-se1"

  name: "inception_4e/relu_5x5_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_4e/5x5_reduce-se1"

  top: "inception_4e/5x5-se1"

  name: "inception_4e/5x5-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/5x5-se1"

  top: "inception_4e/5x5-se1"

  name: "inception_4e/relu_5x5-se1"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se1"

  top: "inception_4e/pool-se1"

  name: "inception_4e/pool-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4e/pool-se1"

  top: "inception_4e/pool_proj-se1"

  name: "inception_4e/pool_proj-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/pool_proj-se1"

  top: "inception_4e/pool_proj-se1"

  name: "inception_4e/relu_pool_proj-se1"

  type: RELU

}

layers {

  bottom: "inception_4e/1x1-se1"

  bottom: "inception_4e/3x3-se1"

  bottom: "inception_4e/5x5-se1"

  bottom: "inception_4e/pool_proj-se1"

  top: "inception_4e/output-se1"

  name: "inception_4e/output-se1"

  type: CONCAT

}

layers {

  bottom: "inception_4e/output-se1"

  top: "pool4/3x3_s2-se1"

  name: "pool4/3x3_s2-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool4/3x3_s2-se1"

  top: "inception_5a/1x1-se1"

  name: "inception_5a/1x1-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/1x1-se1"

  top: "inception_5a/1x1-se1"

  name: "inception_5a/relu_1x1-se1"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se1"

  top: "inception_5a/3x3_reduce-se1"

  name: "inception_5a/3x3_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/3x3_reduce-se1"

  top: "inception_5a/3x3_reduce-se1"

  name: "inception_5a/relu_3x3_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_5a/3x3_reduce-se1"

  top: "inception_5a/3x3-se1"

  name: "inception_5a/3x3-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 320

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/3x3-se1"

  top: "inception_5a/3x3-se1"

  name: "inception_5a/relu_3x3-se1"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se1"

  top: "inception_5a/5x5_reduce-se1"

  name: "inception_5a/5x5_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/5x5_reduce-se1"

  top: "inception_5a/5x5_reduce-se1"

  name: "inception_5a/relu_5x5_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_5a/5x5_reduce-se1"

  top: "inception_5a/5x5-se1"

  name: "inception_5a/5x5-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/5x5-se1"

  top: "inception_5a/5x5-se1"

  name: "inception_5a/relu_5x5-se1"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se1"

  top: "inception_5a/pool-se1"

  name: "inception_5a/pool-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_5a/pool-se1"

  top: "inception_5a/pool_proj-se1"

  name: "inception_5a/pool_proj-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/pool_proj-se1"

  top: "inception_5a/pool_proj-se1"

  name: "inception_5a/relu_pool_proj-se1"

  type: RELU

}

layers {

  bottom: "inception_5a/1x1-se1"

  bottom: "inception_5a/3x3-se1"

  bottom: "inception_5a/5x5-se1"

  bottom: "inception_5a/pool_proj-se1"

  top: "inception_5a/output-se1"

  name: "inception_5a/output-se1"

  type: CONCAT

}

layers {

  bottom: "inception_5a/output-se1"

  top: "inception_5b/1x1-se1"

  name: "inception_5b/1x1-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 384

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/1x1-se1"

  top: "inception_5b/1x1-se1"

  name: "inception_5b/relu_1x1-se1"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se1"

  top: "inception_5b/3x3_reduce-se1"

  name: "inception_5b/3x3_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/3x3_reduce-se1"

  top: "inception_5b/3x3_reduce-se1"

  name: "inception_5b/relu_3x3_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_5b/3x3_reduce-se1"

  top: "inception_5b/3x3-se1"

  name: "inception_5b/3x3-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 384

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/3x3-se1"

  top: "inception_5b/3x3-se1"

  name: "inception_5b/relu_3x3-se1"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se1"

  top: "inception_5b/5x5_reduce-se1"

  name: "inception_5b/5x5_reduce-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 48

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/5x5_reduce-se1"

  top: "inception_5b/5x5_reduce-se1"

  name: "inception_5b/relu_5x5_reduce-se1"

  type: RELU

}

layers {

  bottom: "inception_5b/5x5_reduce-se1"

  top: "inception_5b/5x5-se1"

  name: "inception_5b/5x5-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/5x5-se1"

  top: "inception_5b/5x5-se1"

  name: "inception_5b/relu_5x5-se1"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se1"

  top: "inception_5b/pool-se1"

  name: "inception_5b/pool-se1"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_5b/pool-se1"

  top: "inception_5b/pool_proj-se1"

  name: "inception_5b/pool_proj-se1"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/pool_proj-se1"

  top: "inception_5b/pool_proj-se1"

  name: "inception_5b/relu_pool_proj-se1"

  type: RELU

}

layers {

  bottom: "inception_5b/1x1-se1"

  bottom: "inception_5b/3x3-se1"

  bottom: "inception_5b/5x5-se1"

  bottom: "inception_5b/pool_proj-se1"

  top: "inception_5b/output-se1"

  name: "inception_5b/output-se1"

  type: CONCAT

}

layers {

  bottom: "inception_5b/output-se1"

  top: "pool5/7x7_s1-se1"

  name: "pool5/7x7_s1-se1"

  type: POOLING

  pooling_param {

    pool: AVE

    kernel_size: 7

    stride: 1

  }

}

layers {

  bottom: "pool5/7x7_s1-se1"

  top: "pool5/7x7_s1-se1"

  name: "pool5/drop_7x7_s1-se1"

  type: DROPOUT

  dropout_param {

    dropout_ratio: 0.5

  }

}

layers {

  bottom: "pool5/7x7_s1-se1"

  top: "fc8-se1"

  name: "loss3/classifier-se1"

  type: INNER_PRODUCT

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  inner_product_param {

    num_output: 200

    weight_filler {

      type: "xavier"

    }

    bias_filler {

      type: "constant"

      value: 0

    }

  }

}

layers {

  name: "prob_layer-se1"

  type: BNLL    

  bottom: "fc8-se1"

  top: "fc8-se1"

}







 
layers {

  bottom: "data"

  top: "conv1/7x7_s2-se2"

  name: "conv1/7x7_s2-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 3

    kernel_size: 7

    stride: 2

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv1/7x7_s2-se2"

  top: "conv1/7x7_s2-se2"

  name: "conv1/relu_7x7-se2"

  type: RELU

}

layers {

  bottom: "conv1/7x7_s2-se2"

  top: "pool1/3x3_s2-se2"

  name: "pool1/3x3_s2-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool1/3x3_s2-se2"

  top: "pool1/norm1-se2"

  name: "pool1/norm1-se2"

  type: LRN

  lrn_param {

    local_size: 5

    alpha: 0.0001

    beta: 0.75

  }

}

layers {

  bottom: "pool1/norm1-se2"

  top: "conv2/3x3_reduce-se2"

  name: "conv2/3x3_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv2/3x3_reduce-se2"

  top: "conv2/3x3_reduce-se2"

  name: "conv2/relu_3x3_reduce-se2"

  type: RELU

}

layers {

  bottom: "conv2/3x3_reduce-se2"

  top: "conv2/3x3-se2"

  name: "conv2/3x3-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv2/3x3-se2"

  top: "conv2/3x3-se2"

  name: "conv2/relu_3x3-se2"

  type: RELU

}

layers {

  bottom: "conv2/3x3-se2"

  top: "conv2/norm2-se2"

  name: "conv2/norm2-se2"

  type: LRN

  lrn_param {

    local_size: 5

    alpha: 0.0001

    beta: 0.75

  }

}

layers {

  bottom: "conv2/norm2-se2"

  top: "pool2/3x3_s2-se2"

  name: "pool2/3x3_s2-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool2/3x3_s2-se2"

  top: "inception_3a/1x1-se2"

  name: "inception_3a/1x1-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/1x1-se2"

  top: "inception_3a/1x1-se2"

  name: "inception_3a/relu_1x1-se2"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se2"

  top: "inception_3a/3x3_reduce-se2"

  name: "inception_3a/3x3_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/3x3_reduce-se2"

  top: "inception_3a/3x3_reduce-se2"

  name: "inception_3a/relu_3x3_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_3a/3x3_reduce-se2"

  top: "inception_3a/3x3-se2"

  name: "inception_3a/3x3-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/3x3-se2"

  top: "inception_3a/3x3-se2"

  name: "inception_3a/relu_3x3-se2"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se2"

  top: "inception_3a/5x5_reduce-se2"

  name: "inception_3a/5x5_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 16

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/5x5_reduce-se2"

  top: "inception_3a/5x5_reduce-se2"

  name: "inception_3a/relu_5x5_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_3a/5x5_reduce-se2"

  top: "inception_3a/5x5-se2"

  name: "inception_3a/5x5-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/5x5-se2"

  top: "inception_3a/5x5-se2"

  name: "inception_3a/relu_5x5-se2"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se2"

  top: "inception_3a/pool-se2"

  name: "inception_3a/pool-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_3a/pool-se2"

  top: "inception_3a/pool_proj-se2"

  name: "inception_3a/pool_proj-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/pool_proj-se2"

  top: "inception_3a/pool_proj-se2"

  name: "inception_3a/relu_pool_proj-se2"

  type: RELU

}

layers {

  bottom: "inception_3a/1x1-se2"

  bottom: "inception_3a/3x3-se2"

  bottom: "inception_3a/5x5-se2"

  bottom: "inception_3a/pool_proj-se2"

  top: "inception_3a/output-se2"

  name: "inception_3a/output-se2"

  type: CONCAT

}

layers {

  bottom: "inception_3a/output-se2"

  top: "inception_3b/1x1-se2"

  name: "inception_3b/1x1-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/1x1-se2"

  top: "inception_3b/1x1-se2"

  name: "inception_3b/relu_1x1-se2"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se2"

  top: "inception_3b/3x3_reduce-se2"

  name: "inception_3b/3x3_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/3x3_reduce-se2"

  top: "inception_3b/3x3_reduce-se2"

  name: "inception_3b/relu_3x3_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_3b/3x3_reduce-se2"

  top: "inception_3b/3x3-se2"

  name: "inception_3b/3x3-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/3x3-se2"

  top: "inception_3b/3x3-se2"

  name: "inception_3b/relu_3x3-se2"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se2"

  top: "inception_3b/5x5_reduce-se2"

  name: "inception_3b/5x5_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/5x5_reduce-se2"

  top: "inception_3b/5x5_reduce-se2"

  name: "inception_3b/relu_5x5_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_3b/5x5_reduce-se2"

  top: "inception_3b/5x5-se2"

  name: "inception_3b/5x5-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/5x5-se2"

  top: "inception_3b/5x5-se2"

  name: "inception_3b/relu_5x5-se2"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se2"

  top: "inception_3b/pool-se2"

  name: "inception_3b/pool-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_3b/pool-se2"

  top: "inception_3b/pool_proj-se2"

  name: "inception_3b/pool_proj-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/pool_proj-se2"

  top: "inception_3b/pool_proj-se2"

  name: "inception_3b/relu_pool_proj-se2"

  type: RELU

}

layers {

  bottom: "inception_3b/1x1-se2"

  bottom: "inception_3b/3x3-se2"

  bottom: "inception_3b/5x5-se2"

  bottom: "inception_3b/pool_proj-se2"

  top: "inception_3b/output-se2"

  name: "inception_3b/output-se2"

  type: CONCAT

}

layers {

  bottom: "inception_3b/output-se2"

  top: "pool3/3x3_s2-se2"

  name: "pool3/3x3_s2-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool3/3x3_s2-se2"

  top: "inception_4a/1x1-se2"

  name: "inception_4a/1x1-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/1x1-se2"

  top: "inception_4a/1x1-se2"

  name: "inception_4a/relu_1x1-se2"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se2"

  top: "inception_4a/3x3_reduce-se2"

  name: "inception_4a/3x3_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/3x3_reduce-se2"

  top: "inception_4a/3x3_reduce-se2"

  name: "inception_4a/relu_3x3_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_4a/3x3_reduce-se2"

  top: "inception_4a/3x3-se2"

  name: "inception_4a/3x3-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 208

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/3x3-se2"

  top: "inception_4a/3x3-se2"

  name: "inception_4a/relu_3x3-se2"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se2"

  top: "inception_4a/5x5_reduce-se2"

  name: "inception_4a/5x5_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 16

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/5x5_reduce-se2"

  top: "inception_4a/5x5_reduce-se2"

  name: "inception_4a/relu_5x5_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_4a/5x5_reduce-se2"

  top: "inception_4a/5x5-se2"

  name: "inception_4a/5x5-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 48

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/5x5-se2"

  top: "inception_4a/5x5-se2"

  name: "inception_4a/relu_5x5-se2"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se2"

  top: "inception_4a/pool-se2"

  name: "inception_4a/pool-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4a/pool-se2"

  top: "inception_4a/pool_proj-se2"

  name: "inception_4a/pool_proj-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/pool_proj-se2"

  top: "inception_4a/pool_proj-se2"

  name: "inception_4a/relu_pool_proj-se2"

  type: RELU

}

layers {

  bottom: "inception_4a/1x1-se2"

  bottom: "inception_4a/3x3-se2"

  bottom: "inception_4a/5x5-se2"

  bottom: "inception_4a/pool_proj-se2"

  top: "inception_4a/output-se2"

  name: "inception_4a/output-se2"

  type: CONCAT

}

layers {

  bottom: "inception_4a/output-se2"

  top: "inception_4b/1x1-se2"

  name: "inception_4b/1x1-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/1x1-se2"

  top: "inception_4b/1x1-se2"

  name: "inception_4b/relu_1x1-se2"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se2"

  top: "inception_4b/3x3_reduce-se2"

  name: "inception_4b/3x3_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 112

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/3x3_reduce-se2"

  top: "inception_4b/3x3_reduce-se2"

  name: "inception_4b/relu_3x3_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_4b/3x3_reduce-se2"

  top: "inception_4b/3x3-se2"

  name: "inception_4b/3x3-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 224

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/3x3-se2"

  top: "inception_4b/3x3-se2"

  name: "inception_4b/relu_3x3-se2"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se2"

  top: "inception_4b/5x5_reduce-se2"

  name: "inception_4b/5x5_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 24

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/5x5_reduce-se2"

  top: "inception_4b/5x5_reduce-se2"

  name: "inception_4b/relu_5x5_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_4b/5x5_reduce-se2"

  top: "inception_4b/5x5-se2"

  name: "inception_4b/5x5-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/5x5-se2"

  top: "inception_4b/5x5-se2"

  name: "inception_4b/relu_5x5-se2"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se2"

  top: "inception_4b/pool-se2"

  name: "inception_4b/pool-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4b/pool-se2"

  top: "inception_4b/pool_proj-se2"

  name: "inception_4b/pool_proj-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/pool_proj-se2"

  top: "inception_4b/pool_proj-se2"

  name: "inception_4b/relu_pool_proj-se2"

  type: RELU

}

layers {

  bottom: "inception_4b/1x1-se2"

  bottom: "inception_4b/3x3-se2"

  bottom: "inception_4b/5x5-se2"

  bottom: "inception_4b/pool_proj-se2"

  top: "inception_4b/output-se2"

  name: "inception_4b/output-se2"

  type: CONCAT

}

layers {

  bottom: "inception_4b/output-se2"

  top: "inception_4c/1x1-se2"

  name: "inception_4c/1x1-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/1x1-se2"

  top: "inception_4c/1x1-se2"

  name: "inception_4c/relu_1x1-se2"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se2"

  top: "inception_4c/3x3_reduce-se2"

  name: "inception_4c/3x3_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/3x3_reduce-se2"

  top: "inception_4c/3x3_reduce-se2"

  name: "inception_4c/relu_3x3_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_4c/3x3_reduce-se2"

  top: "inception_4c/3x3-se2"

  name: "inception_4c/3x3-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/3x3-se2"

  top: "inception_4c/3x3-se2"

  name: "inception_4c/relu_3x3-se2"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se2"

  top: "inception_4c/5x5_reduce-se2"

  name: "inception_4c/5x5_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 24

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/5x5_reduce-se2"

  top: "inception_4c/5x5_reduce-se2"

  name: "inception_4c/relu_5x5_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_4c/5x5_reduce-se2"

  top: "inception_4c/5x5-se2"

  name: "inception_4c/5x5-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/5x5-se2"

  top: "inception_4c/5x5-se2"

  name: "inception_4c/relu_5x5-se2"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se2"

  top: "inception_4c/pool-se2"

  name: "inception_4c/pool-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4c/pool-se2"

  top: "inception_4c/pool_proj-se2"

  name: "inception_4c/pool_proj-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/pool_proj-se2"

  top: "inception_4c/pool_proj-se2"

  name: "inception_4c/relu_pool_proj-se2"

  type: RELU

}

layers {

  bottom: "inception_4c/1x1-se2"

  bottom: "inception_4c/3x3-se2"

  bottom: "inception_4c/5x5-se2"

  bottom: "inception_4c/pool_proj-se2"

  top: "inception_4c/output-se2"

  name: "inception_4c/output-se2"

  type: CONCAT

}

layers {

  bottom: "inception_4c/output-se2"

  top: "inception_4d/1x1-se2"

  name: "inception_4d/1x1-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 112

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/1x1-se2"

  top: "inception_4d/1x1-se2"

  name: "inception_4d/relu_1x1-se2"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se2"

  top: "inception_4d/3x3_reduce-se2"

  name: "inception_4d/3x3_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 144

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/3x3_reduce-se2"

  top: "inception_4d/3x3_reduce-se2"

  name: "inception_4d/relu_3x3_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_4d/3x3_reduce-se2"

  top: "inception_4d/3x3-se2"

  name: "inception_4d/3x3-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 288

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/3x3-se2"

  top: "inception_4d/3x3-se2"

  name: "inception_4d/relu_3x3-se2"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se2"

  top: "inception_4d/5x5_reduce-se2"

  name: "inception_4d/5x5_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/5x5_reduce-se2"

  top: "inception_4d/5x5_reduce-se2"

  name: "inception_4d/relu_5x5_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_4d/5x5_reduce-se2"

  top: "inception_4d/5x5-se2"

  name: "inception_4d/5x5-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/5x5-se2"

  top: "inception_4d/5x5-se2"

  name: "inception_4d/relu_5x5-se2"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se2"

  top: "inception_4d/pool-se2"

  name: "inception_4d/pool-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4d/pool-se2"

  top: "inception_4d/pool_proj-se2"

  name: "inception_4d/pool_proj-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/pool_proj-se2"

  top: "inception_4d/pool_proj-se2"

  name: "inception_4d/relu_pool_proj-se2"

  type: RELU

}

layers {

  bottom: "inception_4d/1x1-se2"

  bottom: "inception_4d/3x3-se2"

  bottom: "inception_4d/5x5-se2"

  bottom: "inception_4d/pool_proj-se2"

  top: "inception_4d/output-se2"

  name: "inception_4d/output-se2"

  type: CONCAT

}

layers {

  bottom: "inception_4d/output-se2"

  top: "inception_4e/1x1-se2"

  name: "inception_4e/1x1-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/1x1-se2"

  top: "inception_4e/1x1-se2"

  name: "inception_4e/relu_1x1-se2"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se2"

  top: "inception_4e/3x3_reduce-se2"

  name: "inception_4e/3x3_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/3x3_reduce-se2"

  top: "inception_4e/3x3_reduce-se2"

  name: "inception_4e/relu_3x3_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_4e/3x3_reduce-se2"

  top: "inception_4e/3x3-se2"

  name: "inception_4e/3x3-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 320

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/3x3-se2"

  top: "inception_4e/3x3-se2"

  name: "inception_4e/relu_3x3-se2"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se2"

  top: "inception_4e/5x5_reduce-se2"

  name: "inception_4e/5x5_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/5x5_reduce-se2"

  top: "inception_4e/5x5_reduce-se2"

  name: "inception_4e/relu_5x5_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_4e/5x5_reduce-se2"

  top: "inception_4e/5x5-se2"

  name: "inception_4e/5x5-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/5x5-se2"

  top: "inception_4e/5x5-se2"

  name: "inception_4e/relu_5x5-se2"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se2"

  top: "inception_4e/pool-se2"

  name: "inception_4e/pool-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4e/pool-se2"

  top: "inception_4e/pool_proj-se2"

  name: "inception_4e/pool_proj-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/pool_proj-se2"

  top: "inception_4e/pool_proj-se2"

  name: "inception_4e/relu_pool_proj-se2"

  type: RELU

}

layers {

  bottom: "inception_4e/1x1-se2"

  bottom: "inception_4e/3x3-se2"

  bottom: "inception_4e/5x5-se2"

  bottom: "inception_4e/pool_proj-se2"

  top: "inception_4e/output-se2"

  name: "inception_4e/output-se2"

  type: CONCAT

}

layers {

  bottom: "inception_4e/output-se2"

  top: "pool4/3x3_s2-se2"

  name: "pool4/3x3_s2-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool4/3x3_s2-se2"

  top: "inception_5a/1x1-se2"

  name: "inception_5a/1x1-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/1x1-se2"

  top: "inception_5a/1x1-se2"

  name: "inception_5a/relu_1x1-se2"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se2"

  top: "inception_5a/3x3_reduce-se2"

  name: "inception_5a/3x3_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/3x3_reduce-se2"

  top: "inception_5a/3x3_reduce-se2"

  name: "inception_5a/relu_3x3_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_5a/3x3_reduce-se2"

  top: "inception_5a/3x3-se2"

  name: "inception_5a/3x3-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 320

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/3x3-se2"

  top: "inception_5a/3x3-se2"

  name: "inception_5a/relu_3x3-se2"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se2"

  top: "inception_5a/5x5_reduce-se2"

  name: "inception_5a/5x5_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/5x5_reduce-se2"

  top: "inception_5a/5x5_reduce-se2"

  name: "inception_5a/relu_5x5_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_5a/5x5_reduce-se2"

  top: "inception_5a/5x5-se2"

  name: "inception_5a/5x5-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/5x5-se2"

  top: "inception_5a/5x5-se2"

  name: "inception_5a/relu_5x5-se2"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se2"

  top: "inception_5a/pool-se2"

  name: "inception_5a/pool-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_5a/pool-se2"

  top: "inception_5a/pool_proj-se2"

  name: "inception_5a/pool_proj-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/pool_proj-se2"

  top: "inception_5a/pool_proj-se2"

  name: "inception_5a/relu_pool_proj-se2"

  type: RELU

}

layers {

  bottom: "inception_5a/1x1-se2"

  bottom: "inception_5a/3x3-se2"

  bottom: "inception_5a/5x5-se2"

  bottom: "inception_5a/pool_proj-se2"

  top: "inception_5a/output-se2"

  name: "inception_5a/output-se2"

  type: CONCAT

}

layers {

  bottom: "inception_5a/output-se2"

  top: "inception_5b/1x1-se2"

  name: "inception_5b/1x1-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 384

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/1x1-se2"

  top: "inception_5b/1x1-se2"

  name: "inception_5b/relu_1x1-se2"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se2"

  top: "inception_5b/3x3_reduce-se2"

  name: "inception_5b/3x3_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/3x3_reduce-se2"

  top: "inception_5b/3x3_reduce-se2"

  name: "inception_5b/relu_3x3_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_5b/3x3_reduce-se2"

  top: "inception_5b/3x3-se2"

  name: "inception_5b/3x3-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 384

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/3x3-se2"

  top: "inception_5b/3x3-se2"

  name: "inception_5b/relu_3x3-se2"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se2"

  top: "inception_5b/5x5_reduce-se2"

  name: "inception_5b/5x5_reduce-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 48

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/5x5_reduce-se2"

  top: "inception_5b/5x5_reduce-se2"

  name: "inception_5b/relu_5x5_reduce-se2"

  type: RELU

}

layers {

  bottom: "inception_5b/5x5_reduce-se2"

  top: "inception_5b/5x5-se2"

  name: "inception_5b/5x5-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/5x5-se2"

  top: "inception_5b/5x5-se2"

  name: "inception_5b/relu_5x5-se2"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se2"

  top: "inception_5b/pool-se2"

  name: "inception_5b/pool-se2"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_5b/pool-se2"

  top: "inception_5b/pool_proj-se2"

  name: "inception_5b/pool_proj-se2"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/pool_proj-se2"

  top: "inception_5b/pool_proj-se2"

  name: "inception_5b/relu_pool_proj-se2"

  type: RELU

}

layers {

  bottom: "inception_5b/1x1-se2"

  bottom: "inception_5b/3x3-se2"

  bottom: "inception_5b/5x5-se2"

  bottom: "inception_5b/pool_proj-se2"

  top: "inception_5b/output-se2"

  name: "inception_5b/output-se2"

  type: CONCAT

}

layers {

  bottom: "inception_5b/output-se2"

  top: "pool5/7x7_s1-se2"

  name: "pool5/7x7_s1-se2"

  type: POOLING

  pooling_param {

    pool: AVE

    kernel_size: 7

    stride: 1

  }

}

layers {

  bottom: "pool5/7x7_s1-se2"

  top: "pool5/7x7_s1-se2"

  name: "pool5/drop_7x7_s1-se2"

  type: DROPOUT

  dropout_param {

    dropout_ratio: 0.5

  }

}

layers {

  bottom: "pool5/7x7_s1-se2"

  top: "fc8-se2"

  name: "loss3/classifier-se2"

  type: INNER_PRODUCT

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  inner_product_param {

    num_output: 200

    weight_filler {

      type: "xavier"

    }

    bias_filler {

      type: "constant"

      value: 0

    }

  }

}

layers {

  name: "prob_layer-se2"

  type: BNLL    

  bottom: "fc8-se2"

  top: "fc8-se2"

}







 
layers {

  bottom: "data"

  top: "conv1/7x7_s2-se3"

  name: "conv1/7x7_s2-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 3

    kernel_size: 7

    stride: 2

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv1/7x7_s2-se3"

  top: "conv1/7x7_s2-se3"

  name: "conv1/relu_7x7-se3"

  type: RELU

}

layers {

  bottom: "conv1/7x7_s2-se3"

  top: "pool1/3x3_s2-se3"

  name: "pool1/3x3_s2-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool1/3x3_s2-se3"

  top: "pool1/norm1-se3"

  name: "pool1/norm1-se3"

  type: LRN

  lrn_param {

    local_size: 5

    alpha: 0.0001

    beta: 0.75

  }

}

layers {

  bottom: "pool1/norm1-se3"

  top: "conv2/3x3_reduce-se3"

  name: "conv2/3x3_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv2/3x3_reduce-se3"

  top: "conv2/3x3_reduce-se3"

  name: "conv2/relu_3x3_reduce-se3"

  type: RELU

}

layers {

  bottom: "conv2/3x3_reduce-se3"

  top: "conv2/3x3-se3"

  name: "conv2/3x3-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv2/3x3-se3"

  top: "conv2/3x3-se3"

  name: "conv2/relu_3x3-se3"

  type: RELU

}

layers {

  bottom: "conv2/3x3-se3"

  top: "conv2/norm2-se3"

  name: "conv2/norm2-se3"

  type: LRN

  lrn_param {

    local_size: 5

    alpha: 0.0001

    beta: 0.75

  }

}

layers {

  bottom: "conv2/norm2-se3"

  top: "pool2/3x3_s2-se3"

  name: "pool2/3x3_s2-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool2/3x3_s2-se3"

  top: "inception_3a/1x1-se3"

  name: "inception_3a/1x1-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/1x1-se3"

  top: "inception_3a/1x1-se3"

  name: "inception_3a/relu_1x1-se3"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se3"

  top: "inception_3a/3x3_reduce-se3"

  name: "inception_3a/3x3_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/3x3_reduce-se3"

  top: "inception_3a/3x3_reduce-se3"

  name: "inception_3a/relu_3x3_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_3a/3x3_reduce-se3"

  top: "inception_3a/3x3-se3"

  name: "inception_3a/3x3-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/3x3-se3"

  top: "inception_3a/3x3-se3"

  name: "inception_3a/relu_3x3-se3"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se3"

  top: "inception_3a/5x5_reduce-se3"

  name: "inception_3a/5x5_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 16

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/5x5_reduce-se3"

  top: "inception_3a/5x5_reduce-se3"

  name: "inception_3a/relu_5x5_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_3a/5x5_reduce-se3"

  top: "inception_3a/5x5-se3"

  name: "inception_3a/5x5-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/5x5-se3"

  top: "inception_3a/5x5-se3"

  name: "inception_3a/relu_5x5-se3"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se3"

  top: "inception_3a/pool-se3"

  name: "inception_3a/pool-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_3a/pool-se3"

  top: "inception_3a/pool_proj-se3"

  name: "inception_3a/pool_proj-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/pool_proj-se3"

  top: "inception_3a/pool_proj-se3"

  name: "inception_3a/relu_pool_proj-se3"

  type: RELU

}

layers {

  bottom: "inception_3a/1x1-se3"

  bottom: "inception_3a/3x3-se3"

  bottom: "inception_3a/5x5-se3"

  bottom: "inception_3a/pool_proj-se3"

  top: "inception_3a/output-se3"

  name: "inception_3a/output-se3"

  type: CONCAT

}

layers {

  bottom: "inception_3a/output-se3"

  top: "inception_3b/1x1-se3"

  name: "inception_3b/1x1-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/1x1-se3"

  top: "inception_3b/1x1-se3"

  name: "inception_3b/relu_1x1-se3"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se3"

  top: "inception_3b/3x3_reduce-se3"

  name: "inception_3b/3x3_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/3x3_reduce-se3"

  top: "inception_3b/3x3_reduce-se3"

  name: "inception_3b/relu_3x3_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_3b/3x3_reduce-se3"

  top: "inception_3b/3x3-se3"

  name: "inception_3b/3x3-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/3x3-se3"

  top: "inception_3b/3x3-se3"

  name: "inception_3b/relu_3x3-se3"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se3"

  top: "inception_3b/5x5_reduce-se3"

  name: "inception_3b/5x5_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/5x5_reduce-se3"

  top: "inception_3b/5x5_reduce-se3"

  name: "inception_3b/relu_5x5_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_3b/5x5_reduce-se3"

  top: "inception_3b/5x5-se3"

  name: "inception_3b/5x5-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/5x5-se3"

  top: "inception_3b/5x5-se3"

  name: "inception_3b/relu_5x5-se3"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se3"

  top: "inception_3b/pool-se3"

  name: "inception_3b/pool-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_3b/pool-se3"

  top: "inception_3b/pool_proj-se3"

  name: "inception_3b/pool_proj-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/pool_proj-se3"

  top: "inception_3b/pool_proj-se3"

  name: "inception_3b/relu_pool_proj-se3"

  type: RELU

}

layers {

  bottom: "inception_3b/1x1-se3"

  bottom: "inception_3b/3x3-se3"

  bottom: "inception_3b/5x5-se3"

  bottom: "inception_3b/pool_proj-se3"

  top: "inception_3b/output-se3"

  name: "inception_3b/output-se3"

  type: CONCAT

}

layers {

  bottom: "inception_3b/output-se3"

  top: "pool3/3x3_s2-se3"

  name: "pool3/3x3_s2-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool3/3x3_s2-se3"

  top: "inception_4a/1x1-se3"

  name: "inception_4a/1x1-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/1x1-se3"

  top: "inception_4a/1x1-se3"

  name: "inception_4a/relu_1x1-se3"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se3"

  top: "inception_4a/3x3_reduce-se3"

  name: "inception_4a/3x3_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/3x3_reduce-se3"

  top: "inception_4a/3x3_reduce-se3"

  name: "inception_4a/relu_3x3_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_4a/3x3_reduce-se3"

  top: "inception_4a/3x3-se3"

  name: "inception_4a/3x3-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 208

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/3x3-se3"

  top: "inception_4a/3x3-se3"

  name: "inception_4a/relu_3x3-se3"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se3"

  top: "inception_4a/5x5_reduce-se3"

  name: "inception_4a/5x5_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 16

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/5x5_reduce-se3"

  top: "inception_4a/5x5_reduce-se3"

  name: "inception_4a/relu_5x5_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_4a/5x5_reduce-se3"

  top: "inception_4a/5x5-se3"

  name: "inception_4a/5x5-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 48

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/5x5-se3"

  top: "inception_4a/5x5-se3"

  name: "inception_4a/relu_5x5-se3"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se3"

  top: "inception_4a/pool-se3"

  name: "inception_4a/pool-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4a/pool-se3"

  top: "inception_4a/pool_proj-se3"

  name: "inception_4a/pool_proj-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/pool_proj-se3"

  top: "inception_4a/pool_proj-se3"

  name: "inception_4a/relu_pool_proj-se3"

  type: RELU

}

layers {

  bottom: "inception_4a/1x1-se3"

  bottom: "inception_4a/3x3-se3"

  bottom: "inception_4a/5x5-se3"

  bottom: "inception_4a/pool_proj-se3"

  top: "inception_4a/output-se3"

  name: "inception_4a/output-se3"

  type: CONCAT

}

layers {

  bottom: "inception_4a/output-se3"

  top: "inception_4b/1x1-se3"

  name: "inception_4b/1x1-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/1x1-se3"

  top: "inception_4b/1x1-se3"

  name: "inception_4b/relu_1x1-se3"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se3"

  top: "inception_4b/3x3_reduce-se3"

  name: "inception_4b/3x3_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 112

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/3x3_reduce-se3"

  top: "inception_4b/3x3_reduce-se3"

  name: "inception_4b/relu_3x3_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_4b/3x3_reduce-se3"

  top: "inception_4b/3x3-se3"

  name: "inception_4b/3x3-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 224

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/3x3-se3"

  top: "inception_4b/3x3-se3"

  name: "inception_4b/relu_3x3-se3"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se3"

  top: "inception_4b/5x5_reduce-se3"

  name: "inception_4b/5x5_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 24

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/5x5_reduce-se3"

  top: "inception_4b/5x5_reduce-se3"

  name: "inception_4b/relu_5x5_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_4b/5x5_reduce-se3"

  top: "inception_4b/5x5-se3"

  name: "inception_4b/5x5-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/5x5-se3"

  top: "inception_4b/5x5-se3"

  name: "inception_4b/relu_5x5-se3"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se3"

  top: "inception_4b/pool-se3"

  name: "inception_4b/pool-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4b/pool-se3"

  top: "inception_4b/pool_proj-se3"

  name: "inception_4b/pool_proj-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/pool_proj-se3"

  top: "inception_4b/pool_proj-se3"

  name: "inception_4b/relu_pool_proj-se3"

  type: RELU

}

layers {

  bottom: "inception_4b/1x1-se3"

  bottom: "inception_4b/3x3-se3"

  bottom: "inception_4b/5x5-se3"

  bottom: "inception_4b/pool_proj-se3"

  top: "inception_4b/output-se3"

  name: "inception_4b/output-se3"

  type: CONCAT

}

layers {

  bottom: "inception_4b/output-se3"

  top: "inception_4c/1x1-se3"

  name: "inception_4c/1x1-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/1x1-se3"

  top: "inception_4c/1x1-se3"

  name: "inception_4c/relu_1x1-se3"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se3"

  top: "inception_4c/3x3_reduce-se3"

  name: "inception_4c/3x3_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/3x3_reduce-se3"

  top: "inception_4c/3x3_reduce-se3"

  name: "inception_4c/relu_3x3_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_4c/3x3_reduce-se3"

  top: "inception_4c/3x3-se3"

  name: "inception_4c/3x3-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/3x3-se3"

  top: "inception_4c/3x3-se3"

  name: "inception_4c/relu_3x3-se3"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se3"

  top: "inception_4c/5x5_reduce-se3"

  name: "inception_4c/5x5_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 24

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/5x5_reduce-se3"

  top: "inception_4c/5x5_reduce-se3"

  name: "inception_4c/relu_5x5_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_4c/5x5_reduce-se3"

  top: "inception_4c/5x5-se3"

  name: "inception_4c/5x5-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/5x5-se3"

  top: "inception_4c/5x5-se3"

  name: "inception_4c/relu_5x5-se3"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se3"

  top: "inception_4c/pool-se3"

  name: "inception_4c/pool-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4c/pool-se3"

  top: "inception_4c/pool_proj-se3"

  name: "inception_4c/pool_proj-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/pool_proj-se3"

  top: "inception_4c/pool_proj-se3"

  name: "inception_4c/relu_pool_proj-se3"

  type: RELU

}

layers {

  bottom: "inception_4c/1x1-se3"

  bottom: "inception_4c/3x3-se3"

  bottom: "inception_4c/5x5-se3"

  bottom: "inception_4c/pool_proj-se3"

  top: "inception_4c/output-se3"

  name: "inception_4c/output-se3"

  type: CONCAT

}

layers {

  bottom: "inception_4c/output-se3"

  top: "inception_4d/1x1-se3"

  name: "inception_4d/1x1-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 112

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/1x1-se3"

  top: "inception_4d/1x1-se3"

  name: "inception_4d/relu_1x1-se3"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se3"

  top: "inception_4d/3x3_reduce-se3"

  name: "inception_4d/3x3_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 144

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/3x3_reduce-se3"

  top: "inception_4d/3x3_reduce-se3"

  name: "inception_4d/relu_3x3_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_4d/3x3_reduce-se3"

  top: "inception_4d/3x3-se3"

  name: "inception_4d/3x3-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 288

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/3x3-se3"

  top: "inception_4d/3x3-se3"

  name: "inception_4d/relu_3x3-se3"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se3"

  top: "inception_4d/5x5_reduce-se3"

  name: "inception_4d/5x5_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/5x5_reduce-se3"

  top: "inception_4d/5x5_reduce-se3"

  name: "inception_4d/relu_5x5_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_4d/5x5_reduce-se3"

  top: "inception_4d/5x5-se3"

  name: "inception_4d/5x5-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/5x5-se3"

  top: "inception_4d/5x5-se3"

  name: "inception_4d/relu_5x5-se3"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se3"

  top: "inception_4d/pool-se3"

  name: "inception_4d/pool-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4d/pool-se3"

  top: "inception_4d/pool_proj-se3"

  name: "inception_4d/pool_proj-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/pool_proj-se3"

  top: "inception_4d/pool_proj-se3"

  name: "inception_4d/relu_pool_proj-se3"

  type: RELU

}

layers {

  bottom: "inception_4d/1x1-se3"

  bottom: "inception_4d/3x3-se3"

  bottom: "inception_4d/5x5-se3"

  bottom: "inception_4d/pool_proj-se3"

  top: "inception_4d/output-se3"

  name: "inception_4d/output-se3"

  type: CONCAT

}

layers {

  bottom: "inception_4d/output-se3"

  top: "inception_4e/1x1-se3"

  name: "inception_4e/1x1-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/1x1-se3"

  top: "inception_4e/1x1-se3"

  name: "inception_4e/relu_1x1-se3"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se3"

  top: "inception_4e/3x3_reduce-se3"

  name: "inception_4e/3x3_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/3x3_reduce-se3"

  top: "inception_4e/3x3_reduce-se3"

  name: "inception_4e/relu_3x3_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_4e/3x3_reduce-se3"

  top: "inception_4e/3x3-se3"

  name: "inception_4e/3x3-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 320

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/3x3-se3"

  top: "inception_4e/3x3-se3"

  name: "inception_4e/relu_3x3-se3"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se3"

  top: "inception_4e/5x5_reduce-se3"

  name: "inception_4e/5x5_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/5x5_reduce-se3"

  top: "inception_4e/5x5_reduce-se3"

  name: "inception_4e/relu_5x5_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_4e/5x5_reduce-se3"

  top: "inception_4e/5x5-se3"

  name: "inception_4e/5x5-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/5x5-se3"

  top: "inception_4e/5x5-se3"

  name: "inception_4e/relu_5x5-se3"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se3"

  top: "inception_4e/pool-se3"

  name: "inception_4e/pool-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4e/pool-se3"

  top: "inception_4e/pool_proj-se3"

  name: "inception_4e/pool_proj-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/pool_proj-se3"

  top: "inception_4e/pool_proj-se3"

  name: "inception_4e/relu_pool_proj-se3"

  type: RELU

}

layers {

  bottom: "inception_4e/1x1-se3"

  bottom: "inception_4e/3x3-se3"

  bottom: "inception_4e/5x5-se3"

  bottom: "inception_4e/pool_proj-se3"

  top: "inception_4e/output-se3"

  name: "inception_4e/output-se3"

  type: CONCAT

}

layers {

  bottom: "inception_4e/output-se3"

  top: "pool4/3x3_s2-se3"

  name: "pool4/3x3_s2-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool4/3x3_s2-se3"

  top: "inception_5a/1x1-se3"

  name: "inception_5a/1x1-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/1x1-se3"

  top: "inception_5a/1x1-se3"

  name: "inception_5a/relu_1x1-se3"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se3"

  top: "inception_5a/3x3_reduce-se3"

  name: "inception_5a/3x3_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/3x3_reduce-se3"

  top: "inception_5a/3x3_reduce-se3"

  name: "inception_5a/relu_3x3_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_5a/3x3_reduce-se3"

  top: "inception_5a/3x3-se3"

  name: "inception_5a/3x3-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 320

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/3x3-se3"

  top: "inception_5a/3x3-se3"

  name: "inception_5a/relu_3x3-se3"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se3"

  top: "inception_5a/5x5_reduce-se3"

  name: "inception_5a/5x5_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/5x5_reduce-se3"

  top: "inception_5a/5x5_reduce-se3"

  name: "inception_5a/relu_5x5_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_5a/5x5_reduce-se3"

  top: "inception_5a/5x5-se3"

  name: "inception_5a/5x5-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/5x5-se3"

  top: "inception_5a/5x5-se3"

  name: "inception_5a/relu_5x5-se3"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se3"

  top: "inception_5a/pool-se3"

  name: "inception_5a/pool-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_5a/pool-se3"

  top: "inception_5a/pool_proj-se3"

  name: "inception_5a/pool_proj-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/pool_proj-se3"

  top: "inception_5a/pool_proj-se3"

  name: "inception_5a/relu_pool_proj-se3"

  type: RELU

}

layers {

  bottom: "inception_5a/1x1-se3"

  bottom: "inception_5a/3x3-se3"

  bottom: "inception_5a/5x5-se3"

  bottom: "inception_5a/pool_proj-se3"

  top: "inception_5a/output-se3"

  name: "inception_5a/output-se3"

  type: CONCAT

}

layers {

  bottom: "inception_5a/output-se3"

  top: "inception_5b/1x1-se3"

  name: "inception_5b/1x1-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 384

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/1x1-se3"

  top: "inception_5b/1x1-se3"

  name: "inception_5b/relu_1x1-se3"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se3"

  top: "inception_5b/3x3_reduce-se3"

  name: "inception_5b/3x3_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/3x3_reduce-se3"

  top: "inception_5b/3x3_reduce-se3"

  name: "inception_5b/relu_3x3_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_5b/3x3_reduce-se3"

  top: "inception_5b/3x3-se3"

  name: "inception_5b/3x3-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 384

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/3x3-se3"

  top: "inception_5b/3x3-se3"

  name: "inception_5b/relu_3x3-se3"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se3"

  top: "inception_5b/5x5_reduce-se3"

  name: "inception_5b/5x5_reduce-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 48

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/5x5_reduce-se3"

  top: "inception_5b/5x5_reduce-se3"

  name: "inception_5b/relu_5x5_reduce-se3"

  type: RELU

}

layers {

  bottom: "inception_5b/5x5_reduce-se3"

  top: "inception_5b/5x5-se3"

  name: "inception_5b/5x5-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/5x5-se3"

  top: "inception_5b/5x5-se3"

  name: "inception_5b/relu_5x5-se3"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se3"

  top: "inception_5b/pool-se3"

  name: "inception_5b/pool-se3"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_5b/pool-se3"

  top: "inception_5b/pool_proj-se3"

  name: "inception_5b/pool_proj-se3"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/pool_proj-se3"

  top: "inception_5b/pool_proj-se3"

  name: "inception_5b/relu_pool_proj-se3"

  type: RELU

}

layers {

  bottom: "inception_5b/1x1-se3"

  bottom: "inception_5b/3x3-se3"

  bottom: "inception_5b/5x5-se3"

  bottom: "inception_5b/pool_proj-se3"

  top: "inception_5b/output-se3"

  name: "inception_5b/output-se3"

  type: CONCAT

}

layers {

  bottom: "inception_5b/output-se3"

  top: "pool5/7x7_s1-se3"

  name: "pool5/7x7_s1-se3"

  type: POOLING

  pooling_param {

    pool: AVE

    kernel_size: 7

    stride: 1

  }

}

layers {

  bottom: "pool5/7x7_s1-se3"

  top: "pool5/7x7_s1-se3"

  name: "pool5/drop_7x7_s1-se3"

  type: DROPOUT

  dropout_param {

    dropout_ratio: 0.5

  }

}

layers {

  bottom: "pool5/7x7_s1-se3"

  top: "fc8-se3"

  name: "loss3/classifier-se3"

  type: INNER_PRODUCT

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  inner_product_param {

    num_output: 200

    weight_filler {

      type: "xavier"

    }

    bias_filler {

      type: "constant"

      value: 0

    }

  }

}

layers {

  name: "prob_layer-se3"

  type: BNLL    

  bottom: "fc8-se3"

  top: "fc8-se3"

}







 
layers {

  bottom: "data"

  top: "conv1/7x7_s2-se4"

  name: "conv1/7x7_s2-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 3

    kernel_size: 7

    stride: 2

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv1/7x7_s2-se4"

  top: "conv1/7x7_s2-se4"

  name: "conv1/relu_7x7-se4"

  type: RELU

}

layers {

  bottom: "conv1/7x7_s2-se4"

  top: "pool1/3x3_s2-se4"

  name: "pool1/3x3_s2-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool1/3x3_s2-se4"

  top: "pool1/norm1-se4"

  name: "pool1/norm1-se4"

  type: LRN

  lrn_param {

    local_size: 5

    alpha: 0.0001

    beta: 0.75

  }

}

layers {

  bottom: "pool1/norm1-se4"

  top: "conv2/3x3_reduce-se4"

  name: "conv2/3x3_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv2/3x3_reduce-se4"

  top: "conv2/3x3_reduce-se4"

  name: "conv2/relu_3x3_reduce-se4"

  type: RELU

}

layers {

  bottom: "conv2/3x3_reduce-se4"

  top: "conv2/3x3-se4"

  name: "conv2/3x3-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "conv2/3x3-se4"

  top: "conv2/3x3-se4"

  name: "conv2/relu_3x3-se4"

  type: RELU

}

layers {

  bottom: "conv2/3x3-se4"

  top: "conv2/norm2-se4"

  name: "conv2/norm2-se4"

  type: LRN

  lrn_param {

    local_size: 5

    alpha: 0.0001

    beta: 0.75

  }

}

layers {

  bottom: "conv2/norm2-se4"

  top: "pool2/3x3_s2-se4"

  name: "pool2/3x3_s2-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool2/3x3_s2-se4"

  top: "inception_3a/1x1-se4"

  name: "inception_3a/1x1-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/1x1-se4"

  top: "inception_3a/1x1-se4"

  name: "inception_3a/relu_1x1-se4"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se4"

  top: "inception_3a/3x3_reduce-se4"

  name: "inception_3a/3x3_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/3x3_reduce-se4"

  top: "inception_3a/3x3_reduce-se4"

  name: "inception_3a/relu_3x3_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_3a/3x3_reduce-se4"

  top: "inception_3a/3x3-se4"

  name: "inception_3a/3x3-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/3x3-se4"

  top: "inception_3a/3x3-se4"

  name: "inception_3a/relu_3x3-se4"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se4"

  top: "inception_3a/5x5_reduce-se4"

  name: "inception_3a/5x5_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 16

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/5x5_reduce-se4"

  top: "inception_3a/5x5_reduce-se4"

  name: "inception_3a/relu_5x5_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_3a/5x5_reduce-se4"

  top: "inception_3a/5x5-se4"

  name: "inception_3a/5x5-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/5x5-se4"

  top: "inception_3a/5x5-se4"

  name: "inception_3a/relu_5x5-se4"

  type: RELU

}

layers {

  bottom: "pool2/3x3_s2-se4"

  top: "inception_3a/pool-se4"

  name: "inception_3a/pool-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_3a/pool-se4"

  top: "inception_3a/pool_proj-se4"

  name: "inception_3a/pool_proj-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3a/pool_proj-se4"

  top: "inception_3a/pool_proj-se4"

  name: "inception_3a/relu_pool_proj-se4"

  type: RELU

}

layers {

  bottom: "inception_3a/1x1-se4"

  bottom: "inception_3a/3x3-se4"

  bottom: "inception_3a/5x5-se4"

  bottom: "inception_3a/pool_proj-se4"

  top: "inception_3a/output-se4"

  name: "inception_3a/output-se4"

  type: CONCAT

}

layers {

  bottom: "inception_3a/output-se4"

  top: "inception_3b/1x1-se4"

  name: "inception_3b/1x1-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/1x1-se4"

  top: "inception_3b/1x1-se4"

  name: "inception_3b/relu_1x1-se4"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se4"

  top: "inception_3b/3x3_reduce-se4"

  name: "inception_3b/3x3_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/3x3_reduce-se4"

  top: "inception_3b/3x3_reduce-se4"

  name: "inception_3b/relu_3x3_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_3b/3x3_reduce-se4"

  top: "inception_3b/3x3-se4"

  name: "inception_3b/3x3-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/3x3-se4"

  top: "inception_3b/3x3-se4"

  name: "inception_3b/relu_3x3-se4"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se4"

  top: "inception_3b/5x5_reduce-se4"

  name: "inception_3b/5x5_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/5x5_reduce-se4"

  top: "inception_3b/5x5_reduce-se4"

  name: "inception_3b/relu_5x5_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_3b/5x5_reduce-se4"

  top: "inception_3b/5x5-se4"

  name: "inception_3b/5x5-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/5x5-se4"

  top: "inception_3b/5x5-se4"

  name: "inception_3b/relu_5x5-se4"

  type: RELU

}

layers {

  bottom: "inception_3a/output-se4"

  top: "inception_3b/pool-se4"

  name: "inception_3b/pool-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_3b/pool-se4"

  top: "inception_3b/pool_proj-se4"

  name: "inception_3b/pool_proj-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_3b/pool_proj-se4"

  top: "inception_3b/pool_proj-se4"

  name: "inception_3b/relu_pool_proj-se4"

  type: RELU

}

layers {

  bottom: "inception_3b/1x1-se4"

  bottom: "inception_3b/3x3-se4"

  bottom: "inception_3b/5x5-se4"

  bottom: "inception_3b/pool_proj-se4"

  top: "inception_3b/output-se4"

  name: "inception_3b/output-se4"

  type: CONCAT

}

layers {

  bottom: "inception_3b/output-se4"

  top: "pool3/3x3_s2-se4"

  name: "pool3/3x3_s2-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool3/3x3_s2-se4"

  top: "inception_4a/1x1-se4"

  name: "inception_4a/1x1-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/1x1-se4"

  top: "inception_4a/1x1-se4"

  name: "inception_4a/relu_1x1-se4"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se4"

  top: "inception_4a/3x3_reduce-se4"

  name: "inception_4a/3x3_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 96

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/3x3_reduce-se4"

  top: "inception_4a/3x3_reduce-se4"

  name: "inception_4a/relu_3x3_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_4a/3x3_reduce-se4"

  top: "inception_4a/3x3-se4"

  name: "inception_4a/3x3-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 208

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/3x3-se4"

  top: "inception_4a/3x3-se4"

  name: "inception_4a/relu_3x3-se4"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se4"

  top: "inception_4a/5x5_reduce-se4"

  name: "inception_4a/5x5_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 16

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/5x5_reduce-se4"

  top: "inception_4a/5x5_reduce-se4"

  name: "inception_4a/relu_5x5_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_4a/5x5_reduce-se4"

  top: "inception_4a/5x5-se4"

  name: "inception_4a/5x5-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 48

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/5x5-se4"

  top: "inception_4a/5x5-se4"

  name: "inception_4a/relu_5x5-se4"

  type: RELU

}

layers {

  bottom: "pool3/3x3_s2-se4"

  top: "inception_4a/pool-se4"

  name: "inception_4a/pool-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4a/pool-se4"

  top: "inception_4a/pool_proj-se4"

  name: "inception_4a/pool_proj-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4a/pool_proj-se4"

  top: "inception_4a/pool_proj-se4"

  name: "inception_4a/relu_pool_proj-se4"

  type: RELU

}

layers {

  bottom: "inception_4a/1x1-se4"

  bottom: "inception_4a/3x3-se4"

  bottom: "inception_4a/5x5-se4"

  bottom: "inception_4a/pool_proj-se4"

  top: "inception_4a/output-se4"

  name: "inception_4a/output-se4"

  type: CONCAT

}

layers {

  bottom: "inception_4a/output-se4"

  top: "inception_4b/1x1-se4"

  name: "inception_4b/1x1-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/1x1-se4"

  top: "inception_4b/1x1-se4"

  name: "inception_4b/relu_1x1-se4"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se4"

  top: "inception_4b/3x3_reduce-se4"

  name: "inception_4b/3x3_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 112

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/3x3_reduce-se4"

  top: "inception_4b/3x3_reduce-se4"

  name: "inception_4b/relu_3x3_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_4b/3x3_reduce-se4"

  top: "inception_4b/3x3-se4"

  name: "inception_4b/3x3-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 224

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/3x3-se4"

  top: "inception_4b/3x3-se4"

  name: "inception_4b/relu_3x3-se4"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se4"

  top: "inception_4b/5x5_reduce-se4"

  name: "inception_4b/5x5_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 24

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/5x5_reduce-se4"

  top: "inception_4b/5x5_reduce-se4"

  name: "inception_4b/relu_5x5_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_4b/5x5_reduce-se4"

  top: "inception_4b/5x5-se4"

  name: "inception_4b/5x5-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/5x5-se4"

  top: "inception_4b/5x5-se4"

  name: "inception_4b/relu_5x5-se4"

  type: RELU

}

layers {

  bottom: "inception_4a/output-se4"

  top: "inception_4b/pool-se4"

  name: "inception_4b/pool-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4b/pool-se4"

  top: "inception_4b/pool_proj-se4"

  name: "inception_4b/pool_proj-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4b/pool_proj-se4"

  top: "inception_4b/pool_proj-se4"

  name: "inception_4b/relu_pool_proj-se4"

  type: RELU

}

layers {

  bottom: "inception_4b/1x1-se4"

  bottom: "inception_4b/3x3-se4"

  bottom: "inception_4b/5x5-se4"

  bottom: "inception_4b/pool_proj-se4"

  top: "inception_4b/output-se4"

  name: "inception_4b/output-se4"

  type: CONCAT

}

layers {

  bottom: "inception_4b/output-se4"

  top: "inception_4c/1x1-se4"

  name: "inception_4c/1x1-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/1x1-se4"

  top: "inception_4c/1x1-se4"

  name: "inception_4c/relu_1x1-se4"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se4"

  top: "inception_4c/3x3_reduce-se4"

  name: "inception_4c/3x3_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/3x3_reduce-se4"

  top: "inception_4c/3x3_reduce-se4"

  name: "inception_4c/relu_3x3_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_4c/3x3_reduce-se4"

  top: "inception_4c/3x3-se4"

  name: "inception_4c/3x3-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/3x3-se4"

  top: "inception_4c/3x3-se4"

  name: "inception_4c/relu_3x3-se4"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se4"

  top: "inception_4c/5x5_reduce-se4"

  name: "inception_4c/5x5_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 24

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/5x5_reduce-se4"

  top: "inception_4c/5x5_reduce-se4"

  name: "inception_4c/relu_5x5_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_4c/5x5_reduce-se4"

  top: "inception_4c/5x5-se4"

  name: "inception_4c/5x5-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/5x5-se4"

  top: "inception_4c/5x5-se4"

  name: "inception_4c/relu_5x5-se4"

  type: RELU

}

layers {

  bottom: "inception_4b/output-se4"

  top: "inception_4c/pool-se4"

  name: "inception_4c/pool-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4c/pool-se4"

  top: "inception_4c/pool_proj-se4"

  name: "inception_4c/pool_proj-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4c/pool_proj-se4"

  top: "inception_4c/pool_proj-se4"

  name: "inception_4c/relu_pool_proj-se4"

  type: RELU

}

layers {

  bottom: "inception_4c/1x1-se4"

  bottom: "inception_4c/3x3-se4"

  bottom: "inception_4c/5x5-se4"

  bottom: "inception_4c/pool_proj-se4"

  top: "inception_4c/output-se4"

  name: "inception_4c/output-se4"

  type: CONCAT

}

layers {

  bottom: "inception_4c/output-se4"

  top: "inception_4d/1x1-se4"

  name: "inception_4d/1x1-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 112

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/1x1-se4"

  top: "inception_4d/1x1-se4"

  name: "inception_4d/relu_1x1-se4"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se4"

  top: "inception_4d/3x3_reduce-se4"

  name: "inception_4d/3x3_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 144

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/3x3_reduce-se4"

  top: "inception_4d/3x3_reduce-se4"

  name: "inception_4d/relu_3x3_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_4d/3x3_reduce-se4"

  top: "inception_4d/3x3-se4"

  name: "inception_4d/3x3-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 288

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/3x3-se4"

  top: "inception_4d/3x3-se4"

  name: "inception_4d/relu_3x3-se4"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se4"

  top: "inception_4d/5x5_reduce-se4"

  name: "inception_4d/5x5_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/5x5_reduce-se4"

  top: "inception_4d/5x5_reduce-se4"

  name: "inception_4d/relu_5x5_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_4d/5x5_reduce-se4"

  top: "inception_4d/5x5-se4"

  name: "inception_4d/5x5-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/5x5-se4"

  top: "inception_4d/5x5-se4"

  name: "inception_4d/relu_5x5-se4"

  type: RELU

}

layers {

  bottom: "inception_4c/output-se4"

  top: "inception_4d/pool-se4"

  name: "inception_4d/pool-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4d/pool-se4"

  top: "inception_4d/pool_proj-se4"

  name: "inception_4d/pool_proj-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 64

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4d/pool_proj-se4"

  top: "inception_4d/pool_proj-se4"

  name: "inception_4d/relu_pool_proj-se4"

  type: RELU

}

layers {

  bottom: "inception_4d/1x1-se4"

  bottom: "inception_4d/3x3-se4"

  bottom: "inception_4d/5x5-se4"

  bottom: "inception_4d/pool_proj-se4"

  top: "inception_4d/output-se4"

  name: "inception_4d/output-se4"

  type: CONCAT

}

layers {

  bottom: "inception_4d/output-se4"

  top: "inception_4e/1x1-se4"

  name: "inception_4e/1x1-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/1x1-se4"

  top: "inception_4e/1x1-se4"

  name: "inception_4e/relu_1x1-se4"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se4"

  top: "inception_4e/3x3_reduce-se4"

  name: "inception_4e/3x3_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/3x3_reduce-se4"

  top: "inception_4e/3x3_reduce-se4"

  name: "inception_4e/relu_3x3_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_4e/3x3_reduce-se4"

  top: "inception_4e/3x3-se4"

  name: "inception_4e/3x3-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 320

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/3x3-se4"

  top: "inception_4e/3x3-se4"

  name: "inception_4e/relu_3x3-se4"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se4"

  top: "inception_4e/5x5_reduce-se4"

  name: "inception_4e/5x5_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/5x5_reduce-se4"

  top: "inception_4e/5x5_reduce-se4"

  name: "inception_4e/relu_5x5_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_4e/5x5_reduce-se4"

  top: "inception_4e/5x5-se4"

  name: "inception_4e/5x5-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/5x5-se4"

  top: "inception_4e/5x5-se4"

  name: "inception_4e/relu_5x5-se4"

  type: RELU

}

layers {

  bottom: "inception_4d/output-se4"

  top: "inception_4e/pool-se4"

  name: "inception_4e/pool-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_4e/pool-se4"

  top: "inception_4e/pool_proj-se4"

  name: "inception_4e/pool_proj-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_4e/pool_proj-se4"

  top: "inception_4e/pool_proj-se4"

  name: "inception_4e/relu_pool_proj-se4"

  type: RELU

}

layers {

  bottom: "inception_4e/1x1-se4"

  bottom: "inception_4e/3x3-se4"

  bottom: "inception_4e/5x5-se4"

  bottom: "inception_4e/pool_proj-se4"

  top: "inception_4e/output-se4"

  name: "inception_4e/output-se4"

  type: CONCAT

}

layers {

  bottom: "inception_4e/output-se4"

  top: "pool4/3x3_s2-se4"

  name: "pool4/3x3_s2-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 2

  }

}

layers {

  bottom: "pool4/3x3_s2-se4"

  top: "inception_5a/1x1-se4"

  name: "inception_5a/1x1-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 256

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/1x1-se4"

  top: "inception_5a/1x1-se4"

  name: "inception_5a/relu_1x1-se4"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se4"

  top: "inception_5a/3x3_reduce-se4"

  name: "inception_5a/3x3_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 160

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/3x3_reduce-se4"

  top: "inception_5a/3x3_reduce-se4"

  name: "inception_5a/relu_3x3_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_5a/3x3_reduce-se4"

  top: "inception_5a/3x3-se4"

  name: "inception_5a/3x3-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 320

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/3x3-se4"

  top: "inception_5a/3x3-se4"

  name: "inception_5a/relu_3x3-se4"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se4"

  top: "inception_5a/5x5_reduce-se4"

  name: "inception_5a/5x5_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 32

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/5x5_reduce-se4"

  top: "inception_5a/5x5_reduce-se4"

  name: "inception_5a/relu_5x5_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_5a/5x5_reduce-se4"

  top: "inception_5a/5x5-se4"

  name: "inception_5a/5x5-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/5x5-se4"

  top: "inception_5a/5x5-se4"

  name: "inception_5a/relu_5x5-se4"

  type: RELU

}

layers {

  bottom: "pool4/3x3_s2-se4"

  top: "inception_5a/pool-se4"

  name: "inception_5a/pool-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_5a/pool-se4"

  top: "inception_5a/pool_proj-se4"

  name: "inception_5a/pool_proj-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5a/pool_proj-se4"

  top: "inception_5a/pool_proj-se4"

  name: "inception_5a/relu_pool_proj-se4"

  type: RELU

}

layers {

  bottom: "inception_5a/1x1-se4"

  bottom: "inception_5a/3x3-se4"

  bottom: "inception_5a/5x5-se4"

  bottom: "inception_5a/pool_proj-se4"

  top: "inception_5a/output-se4"

  name: "inception_5a/output-se4"

  type: CONCAT

}

layers {

  bottom: "inception_5a/output-se4"

  top: "inception_5b/1x1-se4"

  name: "inception_5b/1x1-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 384

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/1x1-se4"

  top: "inception_5b/1x1-se4"

  name: "inception_5b/relu_1x1-se4"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se4"

  top: "inception_5b/3x3_reduce-se4"

  name: "inception_5b/3x3_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 192

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.09

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/3x3_reduce-se4"

  top: "inception_5b/3x3_reduce-se4"

  name: "inception_5b/relu_3x3_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_5b/3x3_reduce-se4"

  top: "inception_5b/3x3-se4"

  name: "inception_5b/3x3-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 384

    pad: 1

    kernel_size: 3

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/3x3-se4"

  top: "inception_5b/3x3-se4"

  name: "inception_5b/relu_3x3-se4"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se4"

  top: "inception_5b/5x5_reduce-se4"

  name: "inception_5b/5x5_reduce-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 48

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.2

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/5x5_reduce-se4"

  top: "inception_5b/5x5_reduce-se4"

  name: "inception_5b/relu_5x5_reduce-se4"

  type: RELU

}

layers {

  bottom: "inception_5b/5x5_reduce-se4"

  top: "inception_5b/5x5-se4"

  name: "inception_5b/5x5-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    pad: 2

    kernel_size: 5

    weight_filler {

      type: "xavier"

      std: 0.03

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/5x5-se4"

  top: "inception_5b/5x5-se4"

  name: "inception_5b/relu_5x5-se4"

  type: RELU

}

layers {

  bottom: "inception_5a/output-se4"

  top: "inception_5b/pool-se4"

  name: "inception_5b/pool-se4"

  type: POOLING

  pooling_param {

    pool: MAX

    kernel_size: 3

    stride: 1

    pad: 1

  }

}

layers {

  bottom: "inception_5b/pool-se4"

  top: "inception_5b/pool_proj-se4"

  name: "inception_5b/pool_proj-se4"

  type: CONVOLUTION

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  convolution_param {

    num_output: 128

    kernel_size: 1

    weight_filler {

      type: "xavier"

      std: 0.1

    }

    bias_filler {

      type: "constant"

      value: 0.2

    }

  }

}

layers {

  bottom: "inception_5b/pool_proj-se4"

  top: "inception_5b/pool_proj-se4"

  name: "inception_5b/relu_pool_proj-se4"

  type: RELU

}

layers {

  bottom: "inception_5b/1x1-se4"

  bottom: "inception_5b/3x3-se4"

  bottom: "inception_5b/5x5-se4"

  bottom: "inception_5b/pool_proj-se4"

  top: "inception_5b/output-se4"

  name: "inception_5b/output-se4"

  type: CONCAT

}

layers {

  bottom: "inception_5b/output-se4"

  top: "pool5/7x7_s1-se4"

  name: "pool5/7x7_s1-se4"

  type: POOLING

  pooling_param {

    pool: AVE

    kernel_size: 7

    stride: 1

  }

}

layers {

  bottom: "pool5/7x7_s1-se4"

  top: "pool5/7x7_s1-se4"

  name: "pool5/drop_7x7_s1-se4"

  type: DROPOUT

  dropout_param {

    dropout_ratio: 0.5

  }

}

layers {

  bottom: "pool5/7x7_s1-se4"

  top: "fc8-se4"

  name: "loss3/classifier-se4"

  type: INNER_PRODUCT

  blobs_lr: 1

  blobs_lr: 2

  weight_decay: 1

  weight_decay: 0

  inner_product_param {

    num_output: 200

    weight_filler {

      type: "xavier"

    }

    bias_filler {

      type: "constant"

      value: 0

    }

  }

}

layers {

  name: "prob_layer-se4"

  type: BNLL    

  bottom: "fc8-se4"

  top: "fc8-se4"

}







 
layers {
  type:SLICE
  name:"slice-fc8-se1"
  bottom:"fc8-se1"
  top: "slice1-1"
  top: "slice1-2"
  top: "slice1-3"
  top: "slice1-4"
  top: "slice1-5"
  top: "slice1-6"
  top: "slice1-7"
  top: "slice1-8"
  top: "slice1-9"
  top: "slice1-10"
  top: "slice1-11"
  top: "slice1-12"
  top: "slice1-13"
  top: "slice1-14"
  top: "slice1-15"
  top: "slice1-16"
  top: "slice1-17"
  top: "slice1-18"
  top: "slice1-19"
  top: "slice1-20"
  top: "slice1-21"
  top: "slice1-22"
  top: "slice1-23"
  top: "slice1-24"
  top: "slice1-25"
  top: "slice1-26"
  top: "slice1-27"
  top: "slice1-28"
  top: "slice1-29"
  top: "slice1-30"
  top: "slice1-31"
  top: "slice1-32"
  top: "slice1-33"
  top: "slice1-34"
  top: "slice1-35"
  top: "slice1-36"
  top: "slice1-37"
  top: "slice1-38"
  top: "slice1-39"
  top: "slice1-40"
  top: "slice1-41"
  top: "slice1-42"
  top: "slice1-43"
  top: "slice1-44"
  top: "slice1-45"
  top: "slice1-46"
  top: "slice1-47"
  top: "slice1-48"
  top: "slice1-49"
  top: "slice1-50"
  top: "slice1-51"
  top: "slice1-52"
  top: "slice1-53"
  top: "slice1-54"
  top: "slice1-55"
  top: "slice1-56"
  top: "slice1-57"
  top: "slice1-58"
  top: "slice1-59"
  top: "slice1-60"
  top: "slice1-61"
  top: "slice1-62"
  top: "slice1-63"
  top: "slice1-64"
  top: "slice1-65"
  top: "slice1-66"
  top: "slice1-67"
  top: "slice1-68"
  top: "slice1-69"
  top: "slice1-70"
  top: "slice1-71"
  top: "slice1-72"
  top: "slice1-73"
  top: "slice1-74"
  top: "slice1-75"
  top: "slice1-76"
  top: "slice1-77"
  top: "slice1-78"
  top: "slice1-79"
  top: "slice1-80"
  top: "slice1-81"
  top: "slice1-82"
  top: "slice1-83"
  top: "slice1-84"
  top: "slice1-85"
  top: "slice1-86"
  top: "slice1-87"
  top: "slice1-88"
  top: "slice1-89"
  top: "slice1-90"
  top: "slice1-91"
  top: "slice1-92"
  top: "slice1-93"
  top: "slice1-94"
  top: "slice1-95"
  top: "slice1-96"
  top: "slice1-97"
  top: "slice1-98"
  top: "slice1-99"
  top: "slice1-100"
  top: "slice1-101"
  top: "slice1-102"
  top: "slice1-103"
  top: "slice1-104"
  top: "slice1-105"
  top: "slice1-106"
  top: "slice1-107"
  top: "slice1-108"
  top: "slice1-109"
  top: "slice1-110"
  top: "slice1-111"
  top: "slice1-112"
  top: "slice1-113"
  top: "slice1-114"
  top: "slice1-115"
  top: "slice1-116"
  top: "slice1-117"
  top: "slice1-118"
  top: "slice1-119"
  top: "slice1-120"
  top: "slice1-121"
  top: "slice1-122"
  top: "slice1-123"
  top: "slice1-124"
  top: "slice1-125"
  top: "slice1-126"
  top: "slice1-127"
  top: "slice1-128"
  top: "slice1-129"
  top: "slice1-130"
  top: "slice1-131"
  top: "slice1-132"
  top: "slice1-133"
  top: "slice1-134"
  top: "slice1-135"
  top: "slice1-136"
  top: "slice1-137"
  top: "slice1-138"
  top: "slice1-139"
  top: "slice1-140"
  top: "slice1-141"
  top: "slice1-142"
  top: "slice1-143"
  top: "slice1-144"
  top: "slice1-145"
  top: "slice1-146"
  top: "slice1-147"
  top: "slice1-148"
  top: "slice1-149"
  top: "slice1-150"
  top: "slice1-151"
  top: "slice1-152"
  top: "slice1-153"
  top: "slice1-154"
  top: "slice1-155"
  top: "slice1-156"
  top: "slice1-157"
  top: "slice1-158"
  top: "slice1-159"
  top: "slice1-160"
  top: "slice1-161"
  top: "slice1-162"
  top: "slice1-163"
  top: "slice1-164"
  top: "slice1-165"
  top: "slice1-166"
  top: "slice1-167"
  top: "slice1-168"
  top: "slice1-169"
  top: "slice1-170"
  top: "slice1-171"
  top: "slice1-172"
  top: "slice1-173"
  top: "slice1-174"
  top: "slice1-175"
  top: "slice1-176"
  top: "slice1-177"
  top: "slice1-178"
  top: "slice1-179"
  top: "slice1-180"
  top: "slice1-181"
  top: "slice1-182"
  top: "slice1-183"
  top: "slice1-184"
  top: "slice1-185"
  top: "slice1-186"
  top: "slice1-187"
  top: "slice1-188"
  top: "slice1-189"
  top: "slice1-190"
  top: "slice1-191"
  top: "slice1-192"
  top: "slice1-193"
  top: "slice1-194"
  top: "slice1-195"
  top: "slice1-196"
  top: "slice1-197"
  top: "slice1-198"
  top: "slice1-199"
  top: "slice1-200"
}
layers {
  type:ELTWISE
  name:"max-fc8-se1"
  top:"max-fc8-se1"
  bottom: "slice1-1"
  bottom: "slice1-2"
  bottom: "slice1-3"
  bottom: "slice1-4"
  bottom: "slice1-5"
  bottom: "slice1-6"
  bottom: "slice1-7"
  bottom: "slice1-8"
  bottom: "slice1-9"
  bottom: "slice1-10"
  bottom: "slice1-11"
  bottom: "slice1-12"
  bottom: "slice1-13"
  bottom: "slice1-14"
  bottom: "slice1-15"
  bottom: "slice1-16"
  bottom: "slice1-17"
  bottom: "slice1-18"
  bottom: "slice1-19"
  bottom: "slice1-20"
  bottom: "slice1-21"
  bottom: "slice1-22"
  bottom: "slice1-23"
  bottom: "slice1-24"
  bottom: "slice1-25"
  bottom: "slice1-26"
  bottom: "slice1-27"
  bottom: "slice1-28"
  bottom: "slice1-29"
  bottom: "slice1-30"
  bottom: "slice1-31"
  bottom: "slice1-32"
  bottom: "slice1-33"
  bottom: "slice1-34"
  bottom: "slice1-35"
  bottom: "slice1-36"
  bottom: "slice1-37"
  bottom: "slice1-38"
  bottom: "slice1-39"
  bottom: "slice1-40"
  bottom: "slice1-41"
  bottom: "slice1-42"
  bottom: "slice1-43"
  bottom: "slice1-44"
  bottom: "slice1-45"
  bottom: "slice1-46"
  bottom: "slice1-47"
  bottom: "slice1-48"
  bottom: "slice1-49"
  bottom: "slice1-50"
  bottom: "slice1-51"
  bottom: "slice1-52"
  bottom: "slice1-53"
  bottom: "slice1-54"
  bottom: "slice1-55"
  bottom: "slice1-56"
  bottom: "slice1-57"
  bottom: "slice1-58"
  bottom: "slice1-59"
  bottom: "slice1-60"
  bottom: "slice1-61"
  bottom: "slice1-62"
  bottom: "slice1-63"
  bottom: "slice1-64"
  bottom: "slice1-65"
  bottom: "slice1-66"
  bottom: "slice1-67"
  bottom: "slice1-68"
  bottom: "slice1-69"
  bottom: "slice1-70"
  bottom: "slice1-71"
  bottom: "slice1-72"
  bottom: "slice1-73"
  bottom: "slice1-74"
  bottom: "slice1-75"
  bottom: "slice1-76"
  bottom: "slice1-77"
  bottom: "slice1-78"
  bottom: "slice1-79"
  bottom: "slice1-80"
  bottom: "slice1-81"
  bottom: "slice1-82"
  bottom: "slice1-83"
  bottom: "slice1-84"
  bottom: "slice1-85"
  bottom: "slice1-86"
  bottom: "slice1-87"
  bottom: "slice1-88"
  bottom: "slice1-89"
  bottom: "slice1-90"
  bottom: "slice1-91"
  bottom: "slice1-92"
  bottom: "slice1-93"
  bottom: "slice1-94"
  bottom: "slice1-95"
  bottom: "slice1-96"
  bottom: "slice1-97"
  bottom: "slice1-98"
  bottom: "slice1-99"
  bottom: "slice1-100"
  bottom: "slice1-101"
  bottom: "slice1-102"
  bottom: "slice1-103"
  bottom: "slice1-104"
  bottom: "slice1-105"
  bottom: "slice1-106"
  bottom: "slice1-107"
  bottom: "slice1-108"
  bottom: "slice1-109"
  bottom: "slice1-110"
  bottom: "slice1-111"
  bottom: "slice1-112"
  bottom: "slice1-113"
  bottom: "slice1-114"
  bottom: "slice1-115"
  bottom: "slice1-116"
  bottom: "slice1-117"
  bottom: "slice1-118"
  bottom: "slice1-119"
  bottom: "slice1-120"
  bottom: "slice1-121"
  bottom: "slice1-122"
  bottom: "slice1-123"
  bottom: "slice1-124"
  bottom: "slice1-125"
  bottom: "slice1-126"
  bottom: "slice1-127"
  bottom: "slice1-128"
  bottom: "slice1-129"
  bottom: "slice1-130"
  bottom: "slice1-131"
  bottom: "slice1-132"
  bottom: "slice1-133"
  bottom: "slice1-134"
  bottom: "slice1-135"
  bottom: "slice1-136"
  bottom: "slice1-137"
  bottom: "slice1-138"
  bottom: "slice1-139"
  bottom: "slice1-140"
  bottom: "slice1-141"
  bottom: "slice1-142"
  bottom: "slice1-143"
  bottom: "slice1-144"
  bottom: "slice1-145"
  bottom: "slice1-146"
  bottom: "slice1-147"
  bottom: "slice1-148"
  bottom: "slice1-149"
  bottom: "slice1-150"
  bottom: "slice1-151"
  bottom: "slice1-152"
  bottom: "slice1-153"
  bottom: "slice1-154"
  bottom: "slice1-155"
  bottom: "slice1-156"
  bottom: "slice1-157"
  bottom: "slice1-158"
  bottom: "slice1-159"
  bottom: "slice1-160"
  bottom: "slice1-161"
  bottom: "slice1-162"
  bottom: "slice1-163"
  bottom: "slice1-164"
  bottom: "slice1-165"
  bottom: "slice1-166"
  bottom: "slice1-167"
  bottom: "slice1-168"
  bottom: "slice1-169"
  bottom: "slice1-170"
  bottom: "slice1-171"
  bottom: "slice1-172"
  bottom: "slice1-173"
  bottom: "slice1-174"
  bottom: "slice1-175"
  bottom: "slice1-176"
  bottom: "slice1-177"
  bottom: "slice1-178"
  bottom: "slice1-179"
  bottom: "slice1-180"
  bottom: "slice1-181"
  bottom: "slice1-182"
  bottom: "slice1-183"
  bottom: "slice1-184"
  bottom: "slice1-185"
  bottom: "slice1-186"
  bottom: "slice1-187"
  bottom: "slice1-188"
  bottom: "slice1-189"
  bottom: "slice1-190"
  bottom: "slice1-191"
  bottom: "slice1-192"
  bottom: "slice1-193"
  bottom: "slice1-194"
  bottom: "slice1-195"
  bottom: "slice1-196"
  bottom: "slice1-197"
  bottom: "slice1-198"
  bottom: "slice1-199"
  bottom: "slice1-200"
  eltwise_param{
    operation:MAX
  }
}
layers {
  type:SLICE
  name:"slice-fc8-se2"
  bottom:"fc8-se2"
  top: "slice2-1"
  top: "slice2-2"
  top: "slice2-3"
  top: "slice2-4"
  top: "slice2-5"
  top: "slice2-6"
  top: "slice2-7"
  top: "slice2-8"
  top: "slice2-9"
  top: "slice2-10"
  top: "slice2-11"
  top: "slice2-12"
  top: "slice2-13"
  top: "slice2-14"
  top: "slice2-15"
  top: "slice2-16"
  top: "slice2-17"
  top: "slice2-18"
  top: "slice2-19"
  top: "slice2-20"
  top: "slice2-21"
  top: "slice2-22"
  top: "slice2-23"
  top: "slice2-24"
  top: "slice2-25"
  top: "slice2-26"
  top: "slice2-27"
  top: "slice2-28"
  top: "slice2-29"
  top: "slice2-30"
  top: "slice2-31"
  top: "slice2-32"
  top: "slice2-33"
  top: "slice2-34"
  top: "slice2-35"
  top: "slice2-36"
  top: "slice2-37"
  top: "slice2-38"
  top: "slice2-39"
  top: "slice2-40"
  top: "slice2-41"
  top: "slice2-42"
  top: "slice2-43"
  top: "slice2-44"
  top: "slice2-45"
  top: "slice2-46"
  top: "slice2-47"
  top: "slice2-48"
  top: "slice2-49"
  top: "slice2-50"
  top: "slice2-51"
  top: "slice2-52"
  top: "slice2-53"
  top: "slice2-54"
  top: "slice2-55"
  top: "slice2-56"
  top: "slice2-57"
  top: "slice2-58"
  top: "slice2-59"
  top: "slice2-60"
  top: "slice2-61"
  top: "slice2-62"
  top: "slice2-63"
  top: "slice2-64"
  top: "slice2-65"
  top: "slice2-66"
  top: "slice2-67"
  top: "slice2-68"
  top: "slice2-69"
  top: "slice2-70"
  top: "slice2-71"
  top: "slice2-72"
  top: "slice2-73"
  top: "slice2-74"
  top: "slice2-75"
  top: "slice2-76"
  top: "slice2-77"
  top: "slice2-78"
  top: "slice2-79"
  top: "slice2-80"
  top: "slice2-81"
  top: "slice2-82"
  top: "slice2-83"
  top: "slice2-84"
  top: "slice2-85"
  top: "slice2-86"
  top: "slice2-87"
  top: "slice2-88"
  top: "slice2-89"
  top: "slice2-90"
  top: "slice2-91"
  top: "slice2-92"
  top: "slice2-93"
  top: "slice2-94"
  top: "slice2-95"
  top: "slice2-96"
  top: "slice2-97"
  top: "slice2-98"
  top: "slice2-99"
  top: "slice2-100"
  top: "slice2-101"
  top: "slice2-102"
  top: "slice2-103"
  top: "slice2-104"
  top: "slice2-105"
  top: "slice2-106"
  top: "slice2-107"
  top: "slice2-108"
  top: "slice2-109"
  top: "slice2-110"
  top: "slice2-111"
  top: "slice2-112"
  top: "slice2-113"
  top: "slice2-114"
  top: "slice2-115"
  top: "slice2-116"
  top: "slice2-117"
  top: "slice2-118"
  top: "slice2-119"
  top: "slice2-120"
  top: "slice2-121"
  top: "slice2-122"
  top: "slice2-123"
  top: "slice2-124"
  top: "slice2-125"
  top: "slice2-126"
  top: "slice2-127"
  top: "slice2-128"
  top: "slice2-129"
  top: "slice2-130"
  top: "slice2-131"
  top: "slice2-132"
  top: "slice2-133"
  top: "slice2-134"
  top: "slice2-135"
  top: "slice2-136"
  top: "slice2-137"
  top: "slice2-138"
  top: "slice2-139"
  top: "slice2-140"
  top: "slice2-141"
  top: "slice2-142"
  top: "slice2-143"
  top: "slice2-144"
  top: "slice2-145"
  top: "slice2-146"
  top: "slice2-147"
  top: "slice2-148"
  top: "slice2-149"
  top: "slice2-150"
  top: "slice2-151"
  top: "slice2-152"
  top: "slice2-153"
  top: "slice2-154"
  top: "slice2-155"
  top: "slice2-156"
  top: "slice2-157"
  top: "slice2-158"
  top: "slice2-159"
  top: "slice2-160"
  top: "slice2-161"
  top: "slice2-162"
  top: "slice2-163"
  top: "slice2-164"
  top: "slice2-165"
  top: "slice2-166"
  top: "slice2-167"
  top: "slice2-168"
  top: "slice2-169"
  top: "slice2-170"
  top: "slice2-171"
  top: "slice2-172"
  top: "slice2-173"
  top: "slice2-174"
  top: "slice2-175"
  top: "slice2-176"
  top: "slice2-177"
  top: "slice2-178"
  top: "slice2-179"
  top: "slice2-180"
  top: "slice2-181"
  top: "slice2-182"
  top: "slice2-183"
  top: "slice2-184"
  top: "slice2-185"
  top: "slice2-186"
  top: "slice2-187"
  top: "slice2-188"
  top: "slice2-189"
  top: "slice2-190"
  top: "slice2-191"
  top: "slice2-192"
  top: "slice2-193"
  top: "slice2-194"
  top: "slice2-195"
  top: "slice2-196"
  top: "slice2-197"
  top: "slice2-198"
  top: "slice2-199"
  top: "slice2-200"
}
layers {
  type:ELTWISE
  name:"max-fc8-se2"
  top:"max-fc8-se2"
  bottom: "slice2-1"
  bottom: "slice2-2"
  bottom: "slice2-3"
  bottom: "slice2-4"
  bottom: "slice2-5"
  bottom: "slice2-6"
  bottom: "slice2-7"
  bottom: "slice2-8"
  bottom: "slice2-9"
  bottom: "slice2-10"
  bottom: "slice2-11"
  bottom: "slice2-12"
  bottom: "slice2-13"
  bottom: "slice2-14"
  bottom: "slice2-15"
  bottom: "slice2-16"
  bottom: "slice2-17"
  bottom: "slice2-18"
  bottom: "slice2-19"
  bottom: "slice2-20"
  bottom: "slice2-21"
  bottom: "slice2-22"
  bottom: "slice2-23"
  bottom: "slice2-24"
  bottom: "slice2-25"
  bottom: "slice2-26"
  bottom: "slice2-27"
  bottom: "slice2-28"
  bottom: "slice2-29"
  bottom: "slice2-30"
  bottom: "slice2-31"
  bottom: "slice2-32"
  bottom: "slice2-33"
  bottom: "slice2-34"
  bottom: "slice2-35"
  bottom: "slice2-36"
  bottom: "slice2-37"
  bottom: "slice2-38"
  bottom: "slice2-39"
  bottom: "slice2-40"
  bottom: "slice2-41"
  bottom: "slice2-42"
  bottom: "slice2-43"
  bottom: "slice2-44"
  bottom: "slice2-45"
  bottom: "slice2-46"
  bottom: "slice2-47"
  bottom: "slice2-48"
  bottom: "slice2-49"
  bottom: "slice2-50"
  bottom: "slice2-51"
  bottom: "slice2-52"
  bottom: "slice2-53"
  bottom: "slice2-54"
  bottom: "slice2-55"
  bottom: "slice2-56"
  bottom: "slice2-57"
  bottom: "slice2-58"
  bottom: "slice2-59"
  bottom: "slice2-60"
  bottom: "slice2-61"
  bottom: "slice2-62"
  bottom: "slice2-63"
  bottom: "slice2-64"
  bottom: "slice2-65"
  bottom: "slice2-66"
  bottom: "slice2-67"
  bottom: "slice2-68"
  bottom: "slice2-69"
  bottom: "slice2-70"
  bottom: "slice2-71"
  bottom: "slice2-72"
  bottom: "slice2-73"
  bottom: "slice2-74"
  bottom: "slice2-75"
  bottom: "slice2-76"
  bottom: "slice2-77"
  bottom: "slice2-78"
  bottom: "slice2-79"
  bottom: "slice2-80"
  bottom: "slice2-81"
  bottom: "slice2-82"
  bottom: "slice2-83"
  bottom: "slice2-84"
  bottom: "slice2-85"
  bottom: "slice2-86"
  bottom: "slice2-87"
  bottom: "slice2-88"
  bottom: "slice2-89"
  bottom: "slice2-90"
  bottom: "slice2-91"
  bottom: "slice2-92"
  bottom: "slice2-93"
  bottom: "slice2-94"
  bottom: "slice2-95"
  bottom: "slice2-96"
  bottom: "slice2-97"
  bottom: "slice2-98"
  bottom: "slice2-99"
  bottom: "slice2-100"
  bottom: "slice2-101"
  bottom: "slice2-102"
  bottom: "slice2-103"
  bottom: "slice2-104"
  bottom: "slice2-105"
  bottom: "slice2-106"
  bottom: "slice2-107"
  bottom: "slice2-108"
  bottom: "slice2-109"
  bottom: "slice2-110"
  bottom: "slice2-111"
  bottom: "slice2-112"
  bottom: "slice2-113"
  bottom: "slice2-114"
  bottom: "slice2-115"
  bottom: "slice2-116"
  bottom: "slice2-117"
  bottom: "slice2-118"
  bottom: "slice2-119"
  bottom: "slice2-120"
  bottom: "slice2-121"
  bottom: "slice2-122"
  bottom: "slice2-123"
  bottom: "slice2-124"
  bottom: "slice2-125"
  bottom: "slice2-126"
  bottom: "slice2-127"
  bottom: "slice2-128"
  bottom: "slice2-129"
  bottom: "slice2-130"
  bottom: "slice2-131"
  bottom: "slice2-132"
  bottom: "slice2-133"
  bottom: "slice2-134"
  bottom: "slice2-135"
  bottom: "slice2-136"
  bottom: "slice2-137"
  bottom: "slice2-138"
  bottom: "slice2-139"
  bottom: "slice2-140"
  bottom: "slice2-141"
  bottom: "slice2-142"
  bottom: "slice2-143"
  bottom: "slice2-144"
  bottom: "slice2-145"
  bottom: "slice2-146"
  bottom: "slice2-147"
  bottom: "slice2-148"
  bottom: "slice2-149"
  bottom: "slice2-150"
  bottom: "slice2-151"
  bottom: "slice2-152"
  bottom: "slice2-153"
  bottom: "slice2-154"
  bottom: "slice2-155"
  bottom: "slice2-156"
  bottom: "slice2-157"
  bottom: "slice2-158"
  bottom: "slice2-159"
  bottom: "slice2-160"
  bottom: "slice2-161"
  bottom: "slice2-162"
  bottom: "slice2-163"
  bottom: "slice2-164"
  bottom: "slice2-165"
  bottom: "slice2-166"
  bottom: "slice2-167"
  bottom: "slice2-168"
  bottom: "slice2-169"
  bottom: "slice2-170"
  bottom: "slice2-171"
  bottom: "slice2-172"
  bottom: "slice2-173"
  bottom: "slice2-174"
  bottom: "slice2-175"
  bottom: "slice2-176"
  bottom: "slice2-177"
  bottom: "slice2-178"
  bottom: "slice2-179"
  bottom: "slice2-180"
  bottom: "slice2-181"
  bottom: "slice2-182"
  bottom: "slice2-183"
  bottom: "slice2-184"
  bottom: "slice2-185"
  bottom: "slice2-186"
  bottom: "slice2-187"
  bottom: "slice2-188"
  bottom: "slice2-189"
  bottom: "slice2-190"
  bottom: "slice2-191"
  bottom: "slice2-192"
  bottom: "slice2-193"
  bottom: "slice2-194"
  bottom: "slice2-195"
  bottom: "slice2-196"
  bottom: "slice2-197"
  bottom: "slice2-198"
  bottom: "slice2-199"
  bottom: "slice2-200"
  eltwise_param{
    operation:MAX
  }
}
layers {
  type:SLICE
  name:"slice-fc8-se3"
  bottom:"fc8-se3"
  top: "slice3-1"
  top: "slice3-2"
  top: "slice3-3"
  top: "slice3-4"
  top: "slice3-5"
  top: "slice3-6"
  top: "slice3-7"
  top: "slice3-8"
  top: "slice3-9"
  top: "slice3-10"
  top: "slice3-11"
  top: "slice3-12"
  top: "slice3-13"
  top: "slice3-14"
  top: "slice3-15"
  top: "slice3-16"
  top: "slice3-17"
  top: "slice3-18"
  top: "slice3-19"
  top: "slice3-20"
  top: "slice3-21"
  top: "slice3-22"
  top: "slice3-23"
  top: "slice3-24"
  top: "slice3-25"
  top: "slice3-26"
  top: "slice3-27"
  top: "slice3-28"
  top: "slice3-29"
  top: "slice3-30"
  top: "slice3-31"
  top: "slice3-32"
  top: "slice3-33"
  top: "slice3-34"
  top: "slice3-35"
  top: "slice3-36"
  top: "slice3-37"
  top: "slice3-38"
  top: "slice3-39"
  top: "slice3-40"
  top: "slice3-41"
  top: "slice3-42"
  top: "slice3-43"
  top: "slice3-44"
  top: "slice3-45"
  top: "slice3-46"
  top: "slice3-47"
  top: "slice3-48"
  top: "slice3-49"
  top: "slice3-50"
  top: "slice3-51"
  top: "slice3-52"
  top: "slice3-53"
  top: "slice3-54"
  top: "slice3-55"
  top: "slice3-56"
  top: "slice3-57"
  top: "slice3-58"
  top: "slice3-59"
  top: "slice3-60"
  top: "slice3-61"
  top: "slice3-62"
  top: "slice3-63"
  top: "slice3-64"
  top: "slice3-65"
  top: "slice3-66"
  top: "slice3-67"
  top: "slice3-68"
  top: "slice3-69"
  top: "slice3-70"
  top: "slice3-71"
  top: "slice3-72"
  top: "slice3-73"
  top: "slice3-74"
  top: "slice3-75"
  top: "slice3-76"
  top: "slice3-77"
  top: "slice3-78"
  top: "slice3-79"
  top: "slice3-80"
  top: "slice3-81"
  top: "slice3-82"
  top: "slice3-83"
  top: "slice3-84"
  top: "slice3-85"
  top: "slice3-86"
  top: "slice3-87"
  top: "slice3-88"
  top: "slice3-89"
  top: "slice3-90"
  top: "slice3-91"
  top: "slice3-92"
  top: "slice3-93"
  top: "slice3-94"
  top: "slice3-95"
  top: "slice3-96"
  top: "slice3-97"
  top: "slice3-98"
  top: "slice3-99"
  top: "slice3-100"
  top: "slice3-101"
  top: "slice3-102"
  top: "slice3-103"
  top: "slice3-104"
  top: "slice3-105"
  top: "slice3-106"
  top: "slice3-107"
  top: "slice3-108"
  top: "slice3-109"
  top: "slice3-110"
  top: "slice3-111"
  top: "slice3-112"
  top: "slice3-113"
  top: "slice3-114"
  top: "slice3-115"
  top: "slice3-116"
  top: "slice3-117"
  top: "slice3-118"
  top: "slice3-119"
  top: "slice3-120"
  top: "slice3-121"
  top: "slice3-122"
  top: "slice3-123"
  top: "slice3-124"
  top: "slice3-125"
  top: "slice3-126"
  top: "slice3-127"
  top: "slice3-128"
  top: "slice3-129"
  top: "slice3-130"
  top: "slice3-131"
  top: "slice3-132"
  top: "slice3-133"
  top: "slice3-134"
  top: "slice3-135"
  top: "slice3-136"
  top: "slice3-137"
  top: "slice3-138"
  top: "slice3-139"
  top: "slice3-140"
  top: "slice3-141"
  top: "slice3-142"
  top: "slice3-143"
  top: "slice3-144"
  top: "slice3-145"
  top: "slice3-146"
  top: "slice3-147"
  top: "slice3-148"
  top: "slice3-149"
  top: "slice3-150"
  top: "slice3-151"
  top: "slice3-152"
  top: "slice3-153"
  top: "slice3-154"
  top: "slice3-155"
  top: "slice3-156"
  top: "slice3-157"
  top: "slice3-158"
  top: "slice3-159"
  top: "slice3-160"
  top: "slice3-161"
  top: "slice3-162"
  top: "slice3-163"
  top: "slice3-164"
  top: "slice3-165"
  top: "slice3-166"
  top: "slice3-167"
  top: "slice3-168"
  top: "slice3-169"
  top: "slice3-170"
  top: "slice3-171"
  top: "slice3-172"
  top: "slice3-173"
  top: "slice3-174"
  top: "slice3-175"
  top: "slice3-176"
  top: "slice3-177"
  top: "slice3-178"
  top: "slice3-179"
  top: "slice3-180"
  top: "slice3-181"
  top: "slice3-182"
  top: "slice3-183"
  top: "slice3-184"
  top: "slice3-185"
  top: "slice3-186"
  top: "slice3-187"
  top: "slice3-188"
  top: "slice3-189"
  top: "slice3-190"
  top: "slice3-191"
  top: "slice3-192"
  top: "slice3-193"
  top: "slice3-194"
  top: "slice3-195"
  top: "slice3-196"
  top: "slice3-197"
  top: "slice3-198"
  top: "slice3-199"
  top: "slice3-200"
}
layers {
  type:ELTWISE
  name:"max-fc8-se3"
  top:"max-fc8-se3"
  bottom: "slice3-1"
  bottom: "slice3-2"
  bottom: "slice3-3"
  bottom: "slice3-4"
  bottom: "slice3-5"
  bottom: "slice3-6"
  bottom: "slice3-7"
  bottom: "slice3-8"
  bottom: "slice3-9"
  bottom: "slice3-10"
  bottom: "slice3-11"
  bottom: "slice3-12"
  bottom: "slice3-13"
  bottom: "slice3-14"
  bottom: "slice3-15"
  bottom: "slice3-16"
  bottom: "slice3-17"
  bottom: "slice3-18"
  bottom: "slice3-19"
  bottom: "slice3-20"
  bottom: "slice3-21"
  bottom: "slice3-22"
  bottom: "slice3-23"
  bottom: "slice3-24"
  bottom: "slice3-25"
  bottom: "slice3-26"
  bottom: "slice3-27"
  bottom: "slice3-28"
  bottom: "slice3-29"
  bottom: "slice3-30"
  bottom: "slice3-31"
  bottom: "slice3-32"
  bottom: "slice3-33"
  bottom: "slice3-34"
  bottom: "slice3-35"
  bottom: "slice3-36"
  bottom: "slice3-37"
  bottom: "slice3-38"
  bottom: "slice3-39"
  bottom: "slice3-40"
  bottom: "slice3-41"
  bottom: "slice3-42"
  bottom: "slice3-43"
  bottom: "slice3-44"
  bottom: "slice3-45"
  bottom: "slice3-46"
  bottom: "slice3-47"
  bottom: "slice3-48"
  bottom: "slice3-49"
  bottom: "slice3-50"
  bottom: "slice3-51"
  bottom: "slice3-52"
  bottom: "slice3-53"
  bottom: "slice3-54"
  bottom: "slice3-55"
  bottom: "slice3-56"
  bottom: "slice3-57"
  bottom: "slice3-58"
  bottom: "slice3-59"
  bottom: "slice3-60"
  bottom: "slice3-61"
  bottom: "slice3-62"
  bottom: "slice3-63"
  bottom: "slice3-64"
  bottom: "slice3-65"
  bottom: "slice3-66"
  bottom: "slice3-67"
  bottom: "slice3-68"
  bottom: "slice3-69"
  bottom: "slice3-70"
  bottom: "slice3-71"
  bottom: "slice3-72"
  bottom: "slice3-73"
  bottom: "slice3-74"
  bottom: "slice3-75"
  bottom: "slice3-76"
  bottom: "slice3-77"
  bottom: "slice3-78"
  bottom: "slice3-79"
  bottom: "slice3-80"
  bottom: "slice3-81"
  bottom: "slice3-82"
  bottom: "slice3-83"
  bottom: "slice3-84"
  bottom: "slice3-85"
  bottom: "slice3-86"
  bottom: "slice3-87"
  bottom: "slice3-88"
  bottom: "slice3-89"
  bottom: "slice3-90"
  bottom: "slice3-91"
  bottom: "slice3-92"
  bottom: "slice3-93"
  bottom: "slice3-94"
  bottom: "slice3-95"
  bottom: "slice3-96"
  bottom: "slice3-97"
  bottom: "slice3-98"
  bottom: "slice3-99"
  bottom: "slice3-100"
  bottom: "slice3-101"
  bottom: "slice3-102"
  bottom: "slice3-103"
  bottom: "slice3-104"
  bottom: "slice3-105"
  bottom: "slice3-106"
  bottom: "slice3-107"
  bottom: "slice3-108"
  bottom: "slice3-109"
  bottom: "slice3-110"
  bottom: "slice3-111"
  bottom: "slice3-112"
  bottom: "slice3-113"
  bottom: "slice3-114"
  bottom: "slice3-115"
  bottom: "slice3-116"
  bottom: "slice3-117"
  bottom: "slice3-118"
  bottom: "slice3-119"
  bottom: "slice3-120"
  bottom: "slice3-121"
  bottom: "slice3-122"
  bottom: "slice3-123"
  bottom: "slice3-124"
  bottom: "slice3-125"
  bottom: "slice3-126"
  bottom: "slice3-127"
  bottom: "slice3-128"
  bottom: "slice3-129"
  bottom: "slice3-130"
  bottom: "slice3-131"
  bottom: "slice3-132"
  bottom: "slice3-133"
  bottom: "slice3-134"
  bottom: "slice3-135"
  bottom: "slice3-136"
  bottom: "slice3-137"
  bottom: "slice3-138"
  bottom: "slice3-139"
  bottom: "slice3-140"
  bottom: "slice3-141"
  bottom: "slice3-142"
  bottom: "slice3-143"
  bottom: "slice3-144"
  bottom: "slice3-145"
  bottom: "slice3-146"
  bottom: "slice3-147"
  bottom: "slice3-148"
  bottom: "slice3-149"
  bottom: "slice3-150"
  bottom: "slice3-151"
  bottom: "slice3-152"
  bottom: "slice3-153"
  bottom: "slice3-154"
  bottom: "slice3-155"
  bottom: "slice3-156"
  bottom: "slice3-157"
  bottom: "slice3-158"
  bottom: "slice3-159"
  bottom: "slice3-160"
  bottom: "slice3-161"
  bottom: "slice3-162"
  bottom: "slice3-163"
  bottom: "slice3-164"
  bottom: "slice3-165"
  bottom: "slice3-166"
  bottom: "slice3-167"
  bottom: "slice3-168"
  bottom: "slice3-169"
  bottom: "slice3-170"
  bottom: "slice3-171"
  bottom: "slice3-172"
  bottom: "slice3-173"
  bottom: "slice3-174"
  bottom: "slice3-175"
  bottom: "slice3-176"
  bottom: "slice3-177"
  bottom: "slice3-178"
  bottom: "slice3-179"
  bottom: "slice3-180"
  bottom: "slice3-181"
  bottom: "slice3-182"
  bottom: "slice3-183"
  bottom: "slice3-184"
  bottom: "slice3-185"
  bottom: "slice3-186"
  bottom: "slice3-187"
  bottom: "slice3-188"
  bottom: "slice3-189"
  bottom: "slice3-190"
  bottom: "slice3-191"
  bottom: "slice3-192"
  bottom: "slice3-193"
  bottom: "slice3-194"
  bottom: "slice3-195"
  bottom: "slice3-196"
  bottom: "slice3-197"
  bottom: "slice3-198"
  bottom: "slice3-199"
  bottom: "slice3-200"
  eltwise_param{
    operation:MAX
  }
}
layers {
  type:SLICE
  name:"slice-fc8-se4"
  bottom:"fc8-se4"
  top: "slice4-1"
  top: "slice4-2"
  top: "slice4-3"
  top: "slice4-4"
  top: "slice4-5"
  top: "slice4-6"
  top: "slice4-7"
  top: "slice4-8"
  top: "slice4-9"
  top: "slice4-10"
  top: "slice4-11"
  top: "slice4-12"
  top: "slice4-13"
  top: "slice4-14"
  top: "slice4-15"
  top: "slice4-16"
  top: "slice4-17"
  top: "slice4-18"
  top: "slice4-19"
  top: "slice4-20"
  top: "slice4-21"
  top: "slice4-22"
  top: "slice4-23"
  top: "slice4-24"
  top: "slice4-25"
  top: "slice4-26"
  top: "slice4-27"
  top: "slice4-28"
  top: "slice4-29"
  top: "slice4-30"
  top: "slice4-31"
  top: "slice4-32"
  top: "slice4-33"
  top: "slice4-34"
  top: "slice4-35"
  top: "slice4-36"
  top: "slice4-37"
  top: "slice4-38"
  top: "slice4-39"
  top: "slice4-40"
  top: "slice4-41"
  top: "slice4-42"
  top: "slice4-43"
  top: "slice4-44"
  top: "slice4-45"
  top: "slice4-46"
  top: "slice4-47"
  top: "slice4-48"
  top: "slice4-49"
  top: "slice4-50"
  top: "slice4-51"
  top: "slice4-52"
  top: "slice4-53"
  top: "slice4-54"
  top: "slice4-55"
  top: "slice4-56"
  top: "slice4-57"
  top: "slice4-58"
  top: "slice4-59"
  top: "slice4-60"
  top: "slice4-61"
  top: "slice4-62"
  top: "slice4-63"
  top: "slice4-64"
  top: "slice4-65"
  top: "slice4-66"
  top: "slice4-67"
  top: "slice4-68"
  top: "slice4-69"
  top: "slice4-70"
  top: "slice4-71"
  top: "slice4-72"
  top: "slice4-73"
  top: "slice4-74"
  top: "slice4-75"
  top: "slice4-76"
  top: "slice4-77"
  top: "slice4-78"
  top: "slice4-79"
  top: "slice4-80"
  top: "slice4-81"
  top: "slice4-82"
  top: "slice4-83"
  top: "slice4-84"
  top: "slice4-85"
  top: "slice4-86"
  top: "slice4-87"
  top: "slice4-88"
  top: "slice4-89"
  top: "slice4-90"
  top: "slice4-91"
  top: "slice4-92"
  top: "slice4-93"
  top: "slice4-94"
  top: "slice4-95"
  top: "slice4-96"
  top: "slice4-97"
  top: "slice4-98"
  top: "slice4-99"
  top: "slice4-100"
  top: "slice4-101"
  top: "slice4-102"
  top: "slice4-103"
  top: "slice4-104"
  top: "slice4-105"
  top: "slice4-106"
  top: "slice4-107"
  top: "slice4-108"
  top: "slice4-109"
  top: "slice4-110"
  top: "slice4-111"
  top: "slice4-112"
  top: "slice4-113"
  top: "slice4-114"
  top: "slice4-115"
  top: "slice4-116"
  top: "slice4-117"
  top: "slice4-118"
  top: "slice4-119"
  top: "slice4-120"
  top: "slice4-121"
  top: "slice4-122"
  top: "slice4-123"
  top: "slice4-124"
  top: "slice4-125"
  top: "slice4-126"
  top: "slice4-127"
  top: "slice4-128"
  top: "slice4-129"
  top: "slice4-130"
  top: "slice4-131"
  top: "slice4-132"
  top: "slice4-133"
  top: "slice4-134"
  top: "slice4-135"
  top: "slice4-136"
  top: "slice4-137"
  top: "slice4-138"
  top: "slice4-139"
  top: "slice4-140"
  top: "slice4-141"
  top: "slice4-142"
  top: "slice4-143"
  top: "slice4-144"
  top: "slice4-145"
  top: "slice4-146"
  top: "slice4-147"
  top: "slice4-148"
  top: "slice4-149"
  top: "slice4-150"
  top: "slice4-151"
  top: "slice4-152"
  top: "slice4-153"
  top: "slice4-154"
  top: "slice4-155"
  top: "slice4-156"
  top: "slice4-157"
  top: "slice4-158"
  top: "slice4-159"
  top: "slice4-160"
  top: "slice4-161"
  top: "slice4-162"
  top: "slice4-163"
  top: "slice4-164"
  top: "slice4-165"
  top: "slice4-166"
  top: "slice4-167"
  top: "slice4-168"
  top: "slice4-169"
  top: "slice4-170"
  top: "slice4-171"
  top: "slice4-172"
  top: "slice4-173"
  top: "slice4-174"
  top: "slice4-175"
  top: "slice4-176"
  top: "slice4-177"
  top: "slice4-178"
  top: "slice4-179"
  top: "slice4-180"
  top: "slice4-181"
  top: "slice4-182"
  top: "slice4-183"
  top: "slice4-184"
  top: "slice4-185"
  top: "slice4-186"
  top: "slice4-187"
  top: "slice4-188"
  top: "slice4-189"
  top: "slice4-190"
  top: "slice4-191"
  top: "slice4-192"
  top: "slice4-193"
  top: "slice4-194"
  top: "slice4-195"
  top: "slice4-196"
  top: "slice4-197"
  top: "slice4-198"
  top: "slice4-199"
  top: "slice4-200"
}
layers {
  type:ELTWISE
  name:"max-fc8-se4"
  top:"max-fc8-se4"
  bottom: "slice4-1"
  bottom: "slice4-2"
  bottom: "slice4-3"
  bottom: "slice4-4"
  bottom: "slice4-5"
  bottom: "slice4-6"
  bottom: "slice4-7"
  bottom: "slice4-8"
  bottom: "slice4-9"
  bottom: "slice4-10"
  bottom: "slice4-11"
  bottom: "slice4-12"
  bottom: "slice4-13"
  bottom: "slice4-14"
  bottom: "slice4-15"
  bottom: "slice4-16"
  bottom: "slice4-17"
  bottom: "slice4-18"
  bottom: "slice4-19"
  bottom: "slice4-20"
  bottom: "slice4-21"
  bottom: "slice4-22"
  bottom: "slice4-23"
  bottom: "slice4-24"
  bottom: "slice4-25"
  bottom: "slice4-26"
  bottom: "slice4-27"
  bottom: "slice4-28"
  bottom: "slice4-29"
  bottom: "slice4-30"
  bottom: "slice4-31"
  bottom: "slice4-32"
  bottom: "slice4-33"
  bottom: "slice4-34"
  bottom: "slice4-35"
  bottom: "slice4-36"
  bottom: "slice4-37"
  bottom: "slice4-38"
  bottom: "slice4-39"
  bottom: "slice4-40"
  bottom: "slice4-41"
  bottom: "slice4-42"
  bottom: "slice4-43"
  bottom: "slice4-44"
  bottom: "slice4-45"
  bottom: "slice4-46"
  bottom: "slice4-47"
  bottom: "slice4-48"
  bottom: "slice4-49"
  bottom: "slice4-50"
  bottom: "slice4-51"
  bottom: "slice4-52"
  bottom: "slice4-53"
  bottom: "slice4-54"
  bottom: "slice4-55"
  bottom: "slice4-56"
  bottom: "slice4-57"
  bottom: "slice4-58"
  bottom: "slice4-59"
  bottom: "slice4-60"
  bottom: "slice4-61"
  bottom: "slice4-62"
  bottom: "slice4-63"
  bottom: "slice4-64"
  bottom: "slice4-65"
  bottom: "slice4-66"
  bottom: "slice4-67"
  bottom: "slice4-68"
  bottom: "slice4-69"
  bottom: "slice4-70"
  bottom: "slice4-71"
  bottom: "slice4-72"
  bottom: "slice4-73"
  bottom: "slice4-74"
  bottom: "slice4-75"
  bottom: "slice4-76"
  bottom: "slice4-77"
  bottom: "slice4-78"
  bottom: "slice4-79"
  bottom: "slice4-80"
  bottom: "slice4-81"
  bottom: "slice4-82"
  bottom: "slice4-83"
  bottom: "slice4-84"
  bottom: "slice4-85"
  bottom: "slice4-86"
  bottom: "slice4-87"
  bottom: "slice4-88"
  bottom: "slice4-89"
  bottom: "slice4-90"
  bottom: "slice4-91"
  bottom: "slice4-92"
  bottom: "slice4-93"
  bottom: "slice4-94"
  bottom: "slice4-95"
  bottom: "slice4-96"
  bottom: "slice4-97"
  bottom: "slice4-98"
  bottom: "slice4-99"
  bottom: "slice4-100"
  bottom: "slice4-101"
  bottom: "slice4-102"
  bottom: "slice4-103"
  bottom: "slice4-104"
  bottom: "slice4-105"
  bottom: "slice4-106"
  bottom: "slice4-107"
  bottom: "slice4-108"
  bottom: "slice4-109"
  bottom: "slice4-110"
  bottom: "slice4-111"
  bottom: "slice4-112"
  bottom: "slice4-113"
  bottom: "slice4-114"
  bottom: "slice4-115"
  bottom: "slice4-116"
  bottom: "slice4-117"
  bottom: "slice4-118"
  bottom: "slice4-119"
  bottom: "slice4-120"
  bottom: "slice4-121"
  bottom: "slice4-122"
  bottom: "slice4-123"
  bottom: "slice4-124"
  bottom: "slice4-125"
  bottom: "slice4-126"
  bottom: "slice4-127"
  bottom: "slice4-128"
  bottom: "slice4-129"
  bottom: "slice4-130"
  bottom: "slice4-131"
  bottom: "slice4-132"
  bottom: "slice4-133"
  bottom: "slice4-134"
  bottom: "slice4-135"
  bottom: "slice4-136"
  bottom: "slice4-137"
  bottom: "slice4-138"
  bottom: "slice4-139"
  bottom: "slice4-140"
  bottom: "slice4-141"
  bottom: "slice4-142"
  bottom: "slice4-143"
  bottom: "slice4-144"
  bottom: "slice4-145"
  bottom: "slice4-146"
  bottom: "slice4-147"
  bottom: "slice4-148"
  bottom: "slice4-149"
  bottom: "slice4-150"
  bottom: "slice4-151"
  bottom: "slice4-152"
  bottom: "slice4-153"
  bottom: "slice4-154"
  bottom: "slice4-155"
  bottom: "slice4-156"
  bottom: "slice4-157"
  bottom: "slice4-158"
  bottom: "slice4-159"
  bottom: "slice4-160"
  bottom: "slice4-161"
  bottom: "slice4-162"
  bottom: "slice4-163"
  bottom: "slice4-164"
  bottom: "slice4-165"
  bottom: "slice4-166"
  bottom: "slice4-167"
  bottom: "slice4-168"
  bottom: "slice4-169"
  bottom: "slice4-170"
  bottom: "slice4-171"
  bottom: "slice4-172"
  bottom: "slice4-173"
  bottom: "slice4-174"
  bottom: "slice4-175"
  bottom: "slice4-176"
  bottom: "slice4-177"
  bottom: "slice4-178"
  bottom: "slice4-179"
  bottom: "slice4-180"
  bottom: "slice4-181"
  bottom: "slice4-182"
  bottom: "slice4-183"
  bottom: "slice4-184"
  bottom: "slice4-185"
  bottom: "slice4-186"
  bottom: "slice4-187"
  bottom: "slice4-188"
  bottom: "slice4-189"
  bottom: "slice4-190"
  bottom: "slice4-191"
  bottom: "slice4-192"
  bottom: "slice4-193"
  bottom: "slice4-194"
  bottom: "slice4-195"
  bottom: "slice4-196"
  bottom: "slice4-197"
  bottom: "slice4-198"
  bottom: "slice4-199"
  bottom: "slice4-200"
  eltwise_param{
    operation:MAX
  }
}
layers {
  name: "concat"

  bottom: "max-fc8-se1"
  bottom: "max-fc8-se2"
  bottom: "max-fc8-se3"
  bottom: "max-fc8-se4"
  top: "conf-ss"
  type: CONCAT
  concat_param {
    concat_dim: 1
  }
}
layers {
  name: "prob-ss"
  type: SOFTMAX
  bottom: "conf-ss"
  top: "prob-ss"
}
layers {
  name: "slice-prob-ss"
  type: SLICE
  bottom: "prob-ss"
  top: "prob-sw1"
  top: "prob-sw2"
  top: "prob-sw3"
  top: "prob-sw4"
}
layers {
  name: "repmat-sw1"
  type: INNER_PRODUCT
  bottom: "prob-sw1"
  top: "repmat-sw1"
  blobs_lr: 0
  blobs_lr: 0
  weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 200
    weight_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  type: ELTWISE
  name: "weighted-prob-ss1"
  bottom: "fc8-se1"
  bottom: "repmat-sw1"
  top: "weighted-prob-ss1"
  eltwise_param {
    operation: PROD
  }
}
layers {
  name: "repmat-sw2"
  type: INNER_PRODUCT
  bottom: "prob-sw2"
  top: "repmat-sw2"
  blobs_lr: 0
  blobs_lr: 0
  weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 200
    weight_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  type: ELTWISE
  name: "weighted-prob-ss2"
  bottom: "fc8-se2"
  bottom: "repmat-sw2"
  top: "weighted-prob-ss2"
  eltwise_param {
    operation: PROD
  }
}
layers {
  name: "repmat-sw3"
  type: INNER_PRODUCT
  bottom: "prob-sw3"
  top: "repmat-sw3"
  blobs_lr: 0
  blobs_lr: 0
  weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 200
    weight_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  type: ELTWISE
  name: "weighted-prob-ss3"
  bottom: "fc8-se3"
  bottom: "repmat-sw3"
  top: "weighted-prob-ss3"
  eltwise_param {
    operation: PROD
  }
}
layers {
  name: "repmat-sw4"
  type: INNER_PRODUCT
  bottom: "prob-sw4"
  top: "repmat-sw4"
  blobs_lr: 0
  blobs_lr: 0
  weight_decay: 0
  weight_decay: 0
  inner_product_param {
    num_output: 200
    weight_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  type: ELTWISE
  name: "weighted-prob-ss4"
  bottom: "fc8-se4"
  bottom: "repmat-sw4"
  top: "weighted-prob-ss4"
  eltwise_param {
    operation: PROD
  }
}
layers {
  name: "sum-weighted-prob"
  type: ELTWISE
  bottom: "weighted-prob-ss1"
  bottom: "weighted-prob-ss2"
  bottom: "weighted-prob-ss3"
  bottom: "weighted-prob-ss4"
  top: "prob"
  eltwise_param {
    operation: SUM
  }
}
layers {
  bottom: "prob"
  bottom: "label"
  top: "loss"
  name: "loss"
  type: SOFTMAX_LOSS
  loss_weight: 1
}
layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "prob"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}
